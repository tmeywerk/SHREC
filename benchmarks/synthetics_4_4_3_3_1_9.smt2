(set-logic QF_LRA)
(declare-fun r3 () Real)
(declare-fun b3 () Bool)
(declare-fun b0 () Bool)
(declare-fun r0 () Real)
(declare-fun r1 () Real)
(declare-fun b2 () Bool)
(declare-fun r2 () Real)
(assert (let ((.def_0 (* (/ 1230947203837463 1125899906842624) r3))) (let ((.def_1 (* (/ 6728221022785481 4503599627370496) r2))) (let ((.def_2 (* (/ 3867958598756083 1125899906842624) r1))) (let ((.def_3 (* (/ 6699709075742897 4503599627370496) r0))) (let ((.def_4 (+ .def_3 .def_2 .def_1 .def_0))) (let ((.def_5 (<= .def_4 (/ 7915592159445433 2251799813685248)))) (let ((.def_6 (not b0))) (let ((.def_7 (or b2 .def_6 .def_5))) (let ((.def_8 (* (/ 5901582136656705 4503599627370496) r3))) (let ((.def_9 (* (- (/ 133750890063403 281474976710656)) r2))) (let ((.def_10 (* (/ 2056926392817041 2251799813685248) r1))) (let ((.def_11 (* (/ 245849385860681 2251799813685248) r0))) (let ((.def_12 (+ .def_11 .def_10 .def_9 .def_8))) (let ((.def_13 (<= .def_12 (/ 5625229362501395 9007199254740992)))) (let ((.def_14 (not b2))) (let ((.def_15 (or b3 .def_14 .def_13))) (let ((.def_16 (* (/ 760765826762999 562949953421312) r3))) (let ((.def_17 (* (- (/ 163625587551455 70368744177664)) r2))) (let ((.def_18 (* (/ 4573043549823721 2251799813685248) r1))) (let ((.def_19 (* (- (/ 4032166563812447 2251799813685248)) r0))) (let ((.def_20 (+ .def_19 .def_18 .def_17 .def_16))) (let ((.def_21 (<= .def_20 (- (/ 4096012066540037 4503599627370496))))) (let ((.def_22 (not b3))) (let ((.def_23 (or .def_22 b0 .def_21))) (let ((.def_24 (and .def_23 .def_15 .def_7))) .def_24))))))))))))))))))))))))))
(check-sat)
