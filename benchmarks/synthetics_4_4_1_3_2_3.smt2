(set-logic QF_LRA)
(declare-fun r0 () Real)
(declare-fun b0 () Bool)
(declare-fun r1 () Real)
(declare-fun r2 () Real)
(declare-fun r3 () Real)
(assert (let ((.def_0 (* (/ 1390547363041059 1125899906842624) r3))) (let ((.def_1 (* (/ 7246693275741 8796093022208) r2))) (let ((.def_2 (* (/ 1200803755644169 9007199254740992) r1))) (let ((.def_3 (* (- (/ 1680600216315365 4503599627370496)) r0))) (let ((.def_4 (+ .def_3 .def_2 .def_1 .def_0))) (let ((.def_5 (<= .def_4 (- (/ 295412894929709 1125899906842624))))) (let ((.def_6 (* (/ 203118094376267 2251799813685248) r3))) (let ((.def_7 (* (/ 2567182843685727 2251799813685248) r2))) (let ((.def_8 (* (/ 1922117247066961 1125899906842624) r1))) (let ((.def_9 (* (- (/ 5171189763161439 9007199254740992)) r0))) (let ((.def_10 (+ .def_9 .def_8 .def_7 .def_6))) (let ((.def_11 (<= .def_10 (- (/ 13614211695105 1125899906842624))))) (let ((.def_12 (not b0))) (let ((.def_13 (or .def_12 .def_11 .def_5))) .def_13)))))))))))))))
(check-sat)
