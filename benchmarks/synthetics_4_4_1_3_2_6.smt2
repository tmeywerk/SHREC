(set-logic QF_LRA)
(declare-fun r0 () Real)
(declare-fun b0 () Bool)
(declare-fun r1 () Real)
(declare-fun r2 () Real)
(declare-fun r3 () Real)
(assert (let ((.def_0 (* (/ 1480783958535219 9007199254740992) r3))) (let ((.def_1 (* (/ 5181991428719101 9007199254740992) r2))) (let ((.def_2 (* (- (/ 1920393131540803 2251799813685248)) r1))) (let ((.def_3 (* (/ 7353858621242837 9007199254740992) r0))) (let ((.def_4 (+ .def_3 .def_2 .def_1 .def_0))) (let ((.def_5 (<= .def_4 (- (/ 1101886826090477 2251799813685248))))) (let ((.def_6 (* (- (/ 590487024799153 4503599627370496)) r3))) (let ((.def_7 (* (- (/ 452316494026679 1125899906842624)) r2))) (let ((.def_8 (* (/ 121584547961103 2251799813685248) r1))) (let ((.def_9 (* (/ 2880757960521837 9007199254740992) r0))) (let ((.def_10 (+ .def_9 .def_8 .def_7 .def_6))) (let ((.def_11 (<= .def_10 (- (/ 2859576952073865 4503599627370496))))) (let ((.def_12 (not b0))) (let ((.def_13 (or .def_12 .def_11 .def_5))) .def_13)))))))))))))))
(check-sat)
