(set-logic QF_LRA)
(declare-fun r2 () Real)
(declare-fun r0 () Real)
(declare-fun r3 () Real)
(declare-fun r1 () Real)
(assert (let ((.def_0 (* (/ 4707376887271437 4503599627370496) r3))) (let ((.def_1 (* (- (/ 594962358241379 562949953421312)) r2))) (let ((.def_2 (* (/ 364772160109233 281474976710656) r1))) (let ((.def_3 (* (- (/ 5282266526172223 9007199254740992)) r0))) (let ((.def_4 (+ .def_3 .def_2 .def_1 .def_0))) (let ((.def_5 (<= .def_4 (- (/ 89228041698945 4503599627370496))))) (let ((.def_6 (* (- (/ 1550514219595939 9007199254740992)) r3))) (let ((.def_7 (* (- (/ 36050194527219 281474976710656)) r2))) (let ((.def_8 (* (- (/ 1012503231607335 2251799813685248)) r1))) (let ((.def_9 (* (- (/ 4175213670107429 2251799813685248)) r0))) (let ((.def_10 (+ .def_9 .def_8 .def_7 .def_6))) (let ((.def_11 (<= .def_10 (- (/ 8375627479353611 4503599627370496))))) (let ((.def_12 (* (/ 6395847745046283 2251799813685248) r3))) (let ((.def_13 (* (- (/ 2577101583859687 4503599627370496)) r2))) (let ((.def_14 (* (- (/ 2593250868827859 4503599627370496)) r1))) (let ((.def_15 (* (/ 6761657091888791 9007199254740992) r0))) (let ((.def_16 (+ .def_15 .def_14 .def_13 .def_12))) (let ((.def_17 (<= .def_16 (/ 1031230551968107 4503599627370496)))) (let ((.def_18 (or .def_17 .def_11 .def_5))) .def_18))))))))))))))))))))
(check-sat)
