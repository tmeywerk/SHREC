(set-logic QF_LRA)
(declare-fun b3 () Bool)
(declare-fun b0 () Bool)
(declare-fun b1 () Bool)
(declare-fun b2 () Bool)
(declare-fun r0 () Real)
(declare-fun r1 () Real)
(declare-fun r2 () Real)
(declare-fun r3 () Real)
(assert (let ((.def_0 (* (- (/ 334026321513797 281474976710656)) r3))) (let ((.def_1 (* (- (/ 5132934892801935 4503599627370496)) r2))) (let ((.def_2 (* (/ 1175752226865317 2251799813685248) r1))) (let ((.def_3 (* (- (/ 481526489778881 2251799813685248)) r0))) (let ((.def_4 (+ .def_3 .def_2 .def_1 .def_0))) (let ((.def_5 (<= .def_4 (- (/ 6998798021492073 9007199254740992))))) (let ((.def_6 (not b2))) (let ((.def_7 (or b3 .def_6 .def_5))) (let ((.def_8 (* (/ 3061651165427313 9007199254740992) r3))) (let ((.def_9 (* (/ 4977201911818557 4503599627370496) r2))) (let ((.def_10 (* (- (/ 1857021305330777 1125899906842624)) r1))) (let ((.def_11 (* (/ 4595587058222943 9007199254740992) r0))) (let ((.def_12 (+ .def_11 .def_10 .def_9 .def_8))) (let ((.def_13 (<= .def_12 (/ 1369431214497767 9007199254740992)))) (let ((.def_14 (or b1 b0 .def_13))) (let ((.def_15 (* (- (/ 2558265807698363 4503599627370496)) r3))) (let ((.def_16 (* (- (/ 642256569743919 2251799813685248)) r2))) (let ((.def_17 (* (/ 3355284492873625 2251799813685248) r1))) (let ((.def_18 (* (/ 3040297620787765 4503599627370496) r0))) (let ((.def_19 (+ .def_18 .def_17 .def_16 .def_15))) (let ((.def_20 (<= .def_19 (/ 1047216687302921 1125899906842624)))) (let ((.def_21 (not b3))) (let ((.def_22 (not b0))) (let ((.def_23 (or .def_22 .def_21 .def_20))) (let ((.def_24 (* (/ 3393982645473843 2251799813685248) r3))) (let ((.def_25 (* (/ 5223061622508939 4503599627370496) r2))) (let ((.def_26 (* (- (/ 647596731014961 562949953421312)) r1))) (let ((.def_27 (* (- (/ 2452336722231385 2251799813685248)) r0))) (let ((.def_28 (+ .def_27 .def_26 .def_25 .def_24))) (let ((.def_29 (<= .def_28 (/ 3922400245674431 9007199254740992)))) (let ((.def_30 (or .def_6 .def_21 .def_29))) (let ((.def_31 (* (/ 4254658339729027 4503599627370496) r3))) (let ((.def_32 (* (- (/ 955855031414853 1125899906842624)) r2))) (let ((.def_33 (* (/ 58128473966757 2251799813685248) r1))) (let ((.def_34 (* (- (/ 507845720395449 562949953421312)) r0))) (let ((.def_35 (+ .def_34 .def_33 .def_32 .def_31))) (let ((.def_36 (<= .def_35 (- (/ 1055384682849547 4503599627370496))))) (let ((.def_37 (or b1 .def_22 .def_36))) (let ((.def_38 (* (- (/ 281581817446713 1125899906842624)) r3))) (let ((.def_39 (* (/ 6200056244849815 4503599627370496) r2))) (let ((.def_40 (* (- (/ 2507785104287389 4503599627370496)) r1))) (let ((.def_41 (* (- (/ 3353784200025245 4503599627370496)) r0))) (let ((.def_42 (+ .def_41 .def_40 .def_39 .def_38))) (let ((.def_43 (<= .def_42 (/ 2375881885523129 9007199254740992)))) (let ((.def_44 (or b1 .def_6 .def_43))) (let ((.def_45 (* (- (/ 929005879893355 9007199254740992)) r3))) (let ((.def_46 (* (/ 195584624876613 1125899906842624) r2))) (let ((.def_47 (* (- (/ 40733571082005 140737488355328)) r1))) (let ((.def_48 (* (- (/ 6438641358050449 2251799813685248)) r0))) (let ((.def_49 (+ .def_48 .def_47 .def_46 .def_45))) (let ((.def_50 (<= .def_49 (- (/ 4083520129046823 4503599627370496))))) (let ((.def_51 (or b1 b2 .def_50))) (let ((.def_52 (and .def_51 .def_44 .def_37 .def_30 .def_23 .def_14 .def_7))) .def_52))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
