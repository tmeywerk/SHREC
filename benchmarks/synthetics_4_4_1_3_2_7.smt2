(set-logic QF_LRA)
(declare-fun b1 () Bool)
(declare-fun r0 () Real)
(declare-fun r1 () Real)
(declare-fun r2 () Real)
(declare-fun r3 () Real)
(assert (let ((.def_0 (* (- (/ 45528119326343 562949953421312)) r3))) (let ((.def_1 (* (- (/ 170330690371757 281474976710656)) r2))) (let ((.def_2 (* (/ 281123283263615 2251799813685248) r1))) (let ((.def_3 (* (- (/ 1672803568698989 2251799813685248)) r0))) (let ((.def_4 (+ .def_3 .def_2 .def_1 .def_0))) (let ((.def_5 (<= .def_4 (- (/ 5611932880018407 4503599627370496))))) (let ((.def_6 (* (/ 1430820583762057 1125899906842624) r3))) (let ((.def_7 (* (- (/ 4033879164343653 9007199254740992)) r2))) (let ((.def_8 (* (/ 3379945935921335 2251799813685248) r1))) (let ((.def_9 (* (- (/ 1565778513445357 4503599627370496)) r0))) (let ((.def_10 (+ .def_9 .def_8 .def_7 .def_6))) (let ((.def_11 (<= .def_10 (- (/ 164675350449843 1125899906842624))))) (let ((.def_12 (not b1))) (let ((.def_13 (or .def_12 .def_11 .def_5))) .def_13)))))))))))))))
(check-sat)
