(set-logic QF_LRA)
(declare-fun b2 () Bool)
(declare-fun b3 () Bool)
(declare-fun r0 () Real)
(declare-fun r1 () Real)
(declare-fun r2 () Real)
(declare-fun r3 () Real)
(declare-fun b0 () Bool)
(declare-fun b1 () Bool)
(assert (let ((.def_0 (* (/ 6879735757855875 9007199254740992) r3))) (let ((.def_1 (* (- (/ 828916505120453 562949953421312)) r2))) (let ((.def_2 (* (/ 320157201273825 562949953421312) r1))) (let ((.def_3 (* (- (/ 668403129146793 562949953421312)) r0))) (let ((.def_4 (+ .def_3 .def_2 .def_1 .def_0))) (let ((.def_5 (<= .def_4 (- (/ 2009283911928917 2251799813685248))))) (let ((.def_6 (not b1))) (let ((.def_7 (not b2))) (let ((.def_8 (or .def_7 .def_6 .def_5))) (let ((.def_9 (* (- (/ 596166501461767 4503599627370496)) r3))) (let ((.def_10 (* (- (/ 2189589013715481 9007199254740992)) r2))) (let ((.def_11 (* (/ 340527558316711 281474976710656) r1))) (let ((.def_12 (* (- (/ 3165460141411205 4503599627370496)) r0))) (let ((.def_13 (+ .def_12 .def_11 .def_10 .def_9))) (let ((.def_14 (<= .def_13 (- (/ 702363974478209 9007199254740992))))) (let ((.def_15 (not b3))) (let ((.def_16 (or b0 .def_15 .def_14))) (let ((.def_17 (* (- (/ 1257744206884079 4503599627370496)) r3))) (let ((.def_18 (* (/ 921279765967163 2251799813685248) r2))) (let ((.def_19 (* (- (/ 2631880606576449 4503599627370496)) r1))) (let ((.def_20 (* (- (/ 197053866122227 2251799813685248)) r0))) (let ((.def_21 (+ .def_20 .def_19 .def_18 .def_17))) (let ((.def_22 (<= .def_21 (- (/ 2983409831950959 9007199254740992))))) (let ((.def_23 (or b2 b1 .def_22))) (let ((.def_24 (* (/ 263963463620197 562949953421312) r3))) (let ((.def_25 (* (- (/ 273111352980935 281474976710656)) r2))) (let ((.def_26 (* (/ 1356131833046371 4503599627370496) r1))) (let ((.def_27 (* (/ 4380535993404235 4503599627370496) r0))) (let ((.def_28 (+ .def_27 .def_26 .def_25 .def_24))) (let ((.def_29 (<= .def_28 (/ 835329136991429 2251799813685248)))) (let ((.def_30 (or b0 b1 .def_29))) (let ((.def_31 (and .def_30 .def_23 .def_16 .def_8))) .def_31)))))))))))))))))))))))))))))))))
(check-sat)
