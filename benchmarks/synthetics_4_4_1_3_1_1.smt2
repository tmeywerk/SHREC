(set-logic QF_LRA)
(declare-fun r3 () Real)
(declare-fun b2 () Bool)
(declare-fun b3 () Bool)
(declare-fun r0 () Real)
(declare-fun r1 () Real)
(declare-fun r2 () Real)
(assert (let ((.def_0 (* (- (/ 665831949292413 4503599627370496)) r3))) (let ((.def_1 (* (/ 1696231670643501 4503599627370496) r2))) (let ((.def_2 (* (/ 2932035396350213 4503599627370496) r1))) (let ((.def_3 (* (/ 24391577260741 4503599627370496) r0))) (let ((.def_4 (+ .def_3 .def_2 .def_1 .def_0))) (let ((.def_5 (<= .def_4 (- (/ 2647323594059781 4503599627370496))))) (let ((.def_6 (not b3))) (let ((.def_7 (not b2))) (let ((.def_8 (or .def_7 .def_6 .def_5))) .def_8))))))))))
(check-sat)
