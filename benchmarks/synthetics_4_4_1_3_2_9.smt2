(set-logic QF_LRA)
(declare-fun r0 () Real)
(declare-fun b3 () Bool)
(declare-fun r1 () Real)
(declare-fun r2 () Real)
(declare-fun r3 () Real)
(assert (let ((.def_0 (* (- (/ 808391775100821 1125899906842624)) r3))) (let ((.def_1 (* (/ 68020743748051 281474976710656) r2))) (let ((.def_2 (* (/ 3799751281266035 4503599627370496) r1))) (let ((.def_3 (* (- (/ 1277917296327493 4503599627370496)) r0))) (let ((.def_4 (+ .def_3 .def_2 .def_1 .def_0))) (let ((.def_5 (<= .def_4 (- (/ 5892425577853149 9007199254740992))))) (let ((.def_6 (* (/ 4244544837061999 4503599627370496) r3))) (let ((.def_7 (* (- (/ 1061749387946831 2251799813685248)) r2))) (let ((.def_8 (* (/ 260084868961837 1125899906842624) r1))) (let ((.def_9 (* (/ 1666812124106767 2251799813685248) r0))) (let ((.def_10 (+ .def_9 .def_8 .def_7 .def_6))) (let ((.def_11 (<= .def_10 (- (/ 389074158007805 9007199254740992))))) (let ((.def_12 (not b3))) (let ((.def_13 (or .def_12 .def_11 .def_5))) .def_13)))))))))))))))
(check-sat)
