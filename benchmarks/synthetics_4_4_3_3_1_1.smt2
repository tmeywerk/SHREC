(set-logic QF_LRA)
(declare-fun r3 () Real)
(declare-fun b0 () Bool)
(declare-fun b1 () Bool)
(declare-fun r0 () Real)
(declare-fun r1 () Real)
(declare-fun b2 () Bool)
(declare-fun r2 () Real)
(assert (let ((.def_0 (* (- (/ 3963004276753127 2251799813685248)) r3))) (let ((.def_1 (* (/ 569846861919855 1125899906842624) r2))) (let ((.def_2 (* (/ 7553910335987711 9007199254740992) r1))) (let ((.def_3 (* (- (/ 3084175916930497 2251799813685248)) r0))) (let ((.def_4 (+ .def_3 .def_2 .def_1 .def_0))) (let ((.def_5 (<= .def_4 (- (/ 2710762492529943 2251799813685248))))) (let ((.def_6 (not b2))) (let ((.def_7 (or .def_6 b1 .def_5))) (let ((.def_8 (* (/ 2936245621505521 2251799813685248) r3))) (let ((.def_9 (* (- (/ 44363639300557 70368744177664)) r2))) (let ((.def_10 (* (/ 1397140269948803 4503599627370496) r1))) (let ((.def_11 (* (- (/ 3795480478690901 4503599627370496)) r0))) (let ((.def_12 (+ .def_11 .def_10 .def_9 .def_8))) (let ((.def_13 (<= .def_12 (- (/ 2391839233225059 9007199254740992))))) (let ((.def_14 (not b1))) (let ((.def_15 (not b0))) (let ((.def_16 (or .def_15 .def_14 .def_13))) (let ((.def_17 (* (/ 6551078465175933 9007199254740992) r3))) (let ((.def_18 (* (/ 4901479663497281 2251799813685248) r2))) (let ((.def_19 (* (/ 1418833614167735 4503599627370496) r1))) (let ((.def_20 (* (- (/ 2548498950053281 9007199254740992)) r0))) (let ((.def_21 (+ .def_20 .def_19 .def_18 .def_17))) (let ((.def_22 (<= .def_21 (/ 2457660283343791 2251799813685248)))) (let ((.def_23 (or b0 .def_14 .def_22))) (let ((.def_24 (and .def_23 .def_16 .def_7))) .def_24))))))))))))))))))))))))))
(check-sat)
