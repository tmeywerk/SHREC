(set-logic QF_LRA)
(declare-fun r3 () Real)
(declare-fun b2 () Bool)
(declare-fun b3 () Bool)
(declare-fun r0 () Real)
(declare-fun b1 () Bool)
(declare-fun r1 () Real)
(declare-fun r2 () Real)
(assert (let ((.def_0 (* (- (/ 448654104121807 562949953421312)) r3))) (let ((.def_1 (* (/ 3889643507376849 4503599627370496) r2))) (let ((.def_2 (* (/ 2542766337226785 2251799813685248) r1))) (let ((.def_3 (* (- (/ 1222645990320799 4503599627370496)) r0))) (let ((.def_4 (+ .def_3 .def_2 .def_1 .def_0))) (let ((.def_5 (<= .def_4 (/ 1841744950575517 4503599627370496)))) (let ((.def_6 (not b3))) (let ((.def_7 (or b1 .def_6 .def_5))) (let ((.def_8 (* (- (/ 4311245006241913 9007199254740992)) r3))) (let ((.def_9 (* (- (/ 761534042362263 9007199254740992)) r2))) (let ((.def_10 (* (/ 496791753007705 9007199254740992) r1))) (let ((.def_11 (* (/ 6870179019148129 2251799813685248) r0))) (let ((.def_12 (+ .def_11 .def_10 .def_9 .def_8))) (let ((.def_13 (<= .def_12 (/ 3550719905179333 2251799813685248)))) (let ((.def_14 (or b1 b3 .def_13))) (let ((.def_15 (* (/ 4812786282588969 9007199254740992) r3))) (let ((.def_16 (* (- (/ 397039133691163 562949953421312)) r2))) (let ((.def_17 (* (- (/ 405129697390931 2251799813685248)) r1))) (let ((.def_18 (* (/ 880600133602379 4503599627370496) r0))) (let ((.def_19 (+ .def_18 .def_17 .def_16 .def_15))) (let ((.def_20 (<= .def_19 (- (/ 1311172021555091 4503599627370496))))) (let ((.def_21 (not b1))) (let ((.def_22 (or .def_21 b3 .def_20))) (let ((.def_23 (* (/ 5576304357667479 2251799813685248) r3))) (let ((.def_24 (* (/ 1429980348535563 562949953421312) r2))) (let ((.def_25 (* (- (/ 3716670086855895 2251799813685248)) r1))) (let ((.def_26 (* (/ 470464871737301 1125899906842624) r0))) (let ((.def_27 (+ .def_26 .def_25 .def_24 .def_23))) (let ((.def_28 (<= .def_27 (/ 4026001210590981 2251799813685248)))) (let ((.def_29 (or b2 .def_21 .def_28))) (let ((.def_30 (and .def_29 .def_22 .def_14 .def_7))) .def_30))))))))))))))))))))))))))))))))
(check-sat)
