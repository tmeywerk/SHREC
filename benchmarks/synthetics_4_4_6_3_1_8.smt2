(set-logic QF_LRA)
(declare-fun r3 () Real)
(declare-fun b3 () Bool)
(declare-fun b2 () Bool)
(declare-fun r0 () Real)
(declare-fun r1 () Real)
(declare-fun b0 () Bool)
(declare-fun r2 () Real)
(assert (let ((.def_0 (* (- (/ 343894416542283 2251799813685248)) r3))) (let ((.def_1 (* (- (/ 3345118435866513 9007199254740992)) r2))) (let ((.def_2 (* (- (/ 4830738638019881 9007199254740992)) r1))) (let ((.def_3 (* (- (/ 2903201981343685 9007199254740992)) r0))) (let ((.def_4 (+ .def_3 .def_2 .def_1 .def_0))) (let ((.def_5 (<= .def_4 (- (/ 1721128691524487 2251799813685248))))) (let ((.def_6 (or b3 b2 .def_5))) (let ((.def_7 (* (- (/ 649966657019259 562949953421312)) r3))) (let ((.def_8 (* (/ 2646889561969997 2251799813685248) r2))) (let ((.def_9 (* (- (/ 872435481384347 4503599627370496)) r1))) (let ((.def_10 (* (- (/ 551305193925181 562949953421312)) r0))) (let ((.def_11 (+ .def_10 .def_9 .def_8 .def_7))) (let ((.def_12 (<= .def_11 (- (/ 602601263693063 1125899906842624))))) (let ((.def_13 (not b2))) (let ((.def_14 (or .def_13 b0 .def_12))) (let ((.def_15 (* (/ 8220327926699319 9007199254740992) r3))) (let ((.def_16 (* (- (/ 927752010947891 1125899906842624)) r2))) (let ((.def_17 (* (- (/ 5257046467858105 4503599627370496)) r1))) (let ((.def_18 (* (- (/ 3679909541343269 2251799813685248)) r0))) (let ((.def_19 (+ .def_18 .def_17 .def_16 .def_15))) (let ((.def_20 (<= .def_19 (- (/ 2351985998882967 2251799813685248))))) (let ((.def_21 (or b0 b3 .def_20))) (let ((.def_22 (* (/ 1252730457299639 562949953421312) r3))) (let ((.def_23 (* (- (/ 1971549512547893 1125899906842624)) r2))) (let ((.def_24 (* (/ 8385666614270285 9007199254740992) r1))) (let ((.def_25 (* (/ 7833311758411673 9007199254740992) r0))) (let ((.def_26 (+ .def_25 .def_24 .def_23 .def_22))) (let ((.def_27 (<= .def_26 (/ 5298446593665401 4503599627370496)))) (let ((.def_28 (not b0))) (let ((.def_29 (not b3))) (let ((.def_30 (or .def_29 .def_28 .def_27))) (let ((.def_31 (* (/ 7560811144522765 9007199254740992) r3))) (let ((.def_32 (* (- (/ 3016448325676609 4503599627370496)) r2))) (let ((.def_33 (* (- (/ 1779097272638943 2251799813685248)) r1))) (let ((.def_34 (* (- (/ 8510577266494757 9007199254740992)) r0))) (let ((.def_35 (+ .def_34 .def_33 .def_32 .def_31))) (let ((.def_36 (<= .def_35 (- (/ 5540566218812081 9007199254740992))))) (let ((.def_37 (or .def_28 .def_29 .def_36))) (let ((.def_38 (* (- (/ 5256223107436299 2251799813685248)) r3))) (let ((.def_39 (* (/ 3856339890911877 4503599627370496) r2))) (let ((.def_40 (* (/ 3966969505902215 4503599627370496) r1))) (let ((.def_41 (* (- (/ 201040582800445 562949953421312)) r0))) (let ((.def_42 (+ .def_41 .def_40 .def_39 .def_38))) (let ((.def_43 (<= .def_42 (- (/ 1057001900039377 9007199254740992))))) (let ((.def_44 (or b3 b2 .def_43))) (let ((.def_45 (and .def_44 .def_37 .def_30 .def_21 .def_14 .def_6))) .def_45)))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
