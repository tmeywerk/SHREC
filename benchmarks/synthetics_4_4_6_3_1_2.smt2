(set-logic QF_LRA)
(declare-fun b3 () Bool)
(declare-fun b2 () Bool)
(declare-fun r0 () Real)
(declare-fun r1 () Real)
(declare-fun r2 () Real)
(declare-fun b1 () Bool)
(declare-fun r3 () Real)
(declare-fun b0 () Bool)
(assert (let ((.def_0 (* (/ 147345786921893 4503599627370496) r3))) (let ((.def_1 (* (/ 114301454021819 281474976710656) r2))) (let ((.def_2 (* (/ 2028596280379803 2251799813685248) r1))) (let ((.def_3 (* (- (/ 2770989812710803 2251799813685248)) r0))) (let ((.def_4 (+ .def_3 .def_2 .def_1 .def_0))) (let ((.def_5 (<= .def_4 (- (/ 2036690690685077 4503599627370496))))) (let ((.def_6 (or b2 b3 .def_5))) (let ((.def_7 (* (- (/ 849144349302879 2251799813685248)) r3))) (let ((.def_8 (* (/ 3860086159397269 2251799813685248) r2))) (let ((.def_9 (* (- (/ 6889982766648695 4503599627370496)) r1))) (let ((.def_10 (* (- (/ 6926788260611585 4503599627370496)) r0))) (let ((.def_11 (+ .def_10 .def_9 .def_8 .def_7))) (let ((.def_12 (<= .def_11 (- (/ 6399283015584541 9007199254740992))))) (let ((.def_13 (not b1))) (let ((.def_14 (not b0))) (let ((.def_15 (or .def_14 .def_13 .def_12))) (let ((.def_16 (* (- (/ 1555326676381089 1125899906842624)) r3))) (let ((.def_17 (* (- (/ 1545271805018681 4503599627370496)) r2))) (let ((.def_18 (* (/ 3999284867981731 4503599627370496) r1))) (let ((.def_19 (* (- (/ 2263866470230157 4503599627370496)) r0))) (let ((.def_20 (+ .def_19 .def_18 .def_17 .def_16))) (let ((.def_21 (<= .def_20 (- (/ 6553955296019753 9007199254740992))))) (let ((.def_22 (or .def_14 b2 .def_21))) (let ((.def_23 (* (/ 6353933731464277 9007199254740992) r3))) (let ((.def_24 (* (- (/ 153021969557483 2251799813685248)) r2))) (let ((.def_25 (* (/ 8990121923957403 9007199254740992) r1))) (let ((.def_26 (* (- (/ 982858926719121 2251799813685248)) r0))) (let ((.def_27 (+ .def_26 .def_25 .def_24 .def_23))) (let ((.def_28 (<= .def_27 (/ 6507109054185503 9007199254740992)))) (let ((.def_29 (or b1 b2 .def_28))) (let ((.def_30 (* (/ 1569887650908289 9007199254740992) r3))) (let ((.def_31 (* (- (/ 931442173168309 2251799813685248)) r2))) (let ((.def_32 (* (/ 1880858100297415 2251799813685248) r1))) (let ((.def_33 (* (- (/ 4568354223593679 4503599627370496)) r0))) (let ((.def_34 (+ .def_33 .def_32 .def_31 .def_30))) (let ((.def_35 (<= .def_34 (/ 139414431291667 4503599627370496)))) (let ((.def_36 (not b3))) (let ((.def_37 (or .def_13 .def_36 .def_35))) (let ((.def_38 (* (- (/ 2601628547635741 4503599627370496)) r3))) (let ((.def_39 (* (- (/ 265565162306067 4503599627370496)) r2))) (let ((.def_40 (* (/ 1653119603144849 9007199254740992) r1))) (let ((.def_41 (* (/ 6178451412392037 4503599627370496) r0))) (let ((.def_42 (+ .def_41 .def_40 .def_39 .def_38))) (let ((.def_43 (<= .def_42 (/ 1504444810843215 2251799813685248)))) (let ((.def_44 (not b2))) (let ((.def_45 (or .def_44 b1 .def_43))) (let ((.def_46 (and .def_45 .def_37 .def_29 .def_22 .def_15 .def_6))) .def_46))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
