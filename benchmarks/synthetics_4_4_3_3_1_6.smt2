(set-logic QF_LRA)
(declare-fun r3 () Real)
(declare-fun b3 () Bool)
(declare-fun b0 () Bool)
(declare-fun r0 () Real)
(declare-fun r1 () Real)
(declare-fun b2 () Bool)
(declare-fun r2 () Real)
(assert (let ((.def_0 (* (/ 884860160166397 1125899906842624) r3))) (let ((.def_1 (* (/ 901257190114655 2251799813685248) r2))) (let ((.def_2 (* (/ 5061407540338665 9007199254740992) r1))) (let ((.def_3 (* (- (/ 4349795852900331 4503599627370496)) r0))) (let ((.def_4 (+ .def_3 .def_2 .def_1 .def_0))) (let ((.def_5 (<= .def_4 (- (/ 3142752399110685 4503599627370496))))) (let ((.def_6 (or b3 b0 .def_5))) (let ((.def_7 (* (/ 1930273790889681 4503599627370496) r3))) (let ((.def_8 (* (- (/ 83251132212393 140737488355328)) r2))) (let ((.def_9 (* (/ 3916172496227377 4503599627370496) r1))) (let ((.def_10 (* (- (/ 2933221215866611 2251799813685248)) r0))) (let ((.def_11 (+ .def_10 .def_9 .def_8 .def_7))) (let ((.def_12 (<= .def_11 (- (/ 370968133284765 562949953421312))))) (let ((.def_13 (or b2 b0 .def_12))) (let ((.def_14 (* (/ 7541103923869675 9007199254740992) r3))) (let ((.def_15 (* (- (/ 1845886047398875 9007199254740992)) r2))) (let ((.def_16 (* (- (/ 4564453458701043 9007199254740992)) r1))) (let ((.def_17 (* (/ 380771126359993 4503599627370496) r0))) (let ((.def_18 (+ .def_17 .def_16 .def_15 .def_14))) (let ((.def_19 (<= .def_18 (- (/ 1410965885593 281474976710656))))) (let ((.def_20 (not b0))) (let ((.def_21 (or b3 .def_20 .def_19))) (let ((.def_22 (and .def_21 .def_13 .def_6))) .def_22))))))))))))))))))))))))
(check-sat)
