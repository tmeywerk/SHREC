(set-logic QF_LRA)
(declare-fun b1 () Bool)
(declare-fun r0 () Real)
(declare-fun r1 () Real)
(declare-fun b2 () Bool)
(declare-fun r2 () Real)
(declare-fun r3 () Real)
(assert (let ((.def_0 (* (/ 803637229361511 1125899906842624) r3))) (let ((.def_1 (* (- (/ 1781822175556559 2251799813685248)) r2))) (let ((.def_2 (* (/ 115031361672431 1125899906842624) r1))) (let ((.def_3 (* (/ 7914346673091039 9007199254740992) r0))) (let ((.def_4 (+ .def_3 .def_2 .def_1 .def_0))) (let ((.def_5 (<= .def_4 (/ 763740250238945 4503599627370496)))) (let ((.def_6 (* (/ 2864120954931789 1125899906842624) r3))) (let ((.def_7 (* (- (/ 8851228359402367 9007199254740992)) r2))) (let ((.def_8 (* (/ 1283795812477085 9007199254740992) r1))) (let ((.def_9 (* (- (/ 320689219798379 4503599627370496)) r0))) (let ((.def_10 (+ .def_9 .def_8 .def_7 .def_6))) (let ((.def_11 (<= .def_10 (/ 110429895199901 9007199254740992)))) (let ((.def_12 (or b1 .def_11 .def_5))) (let ((.def_13 (* (- (/ 151768932225495 4503599627370496)) r3))) (let ((.def_14 (* (- (/ 2856551636996047 2251799813685248)) r2))) (let ((.def_15 (* (- (/ 205243297746713 1125899906842624)) r1))) (let ((.def_16 (* (/ 6891103705464613 2251799813685248) r0))) (let ((.def_17 (+ .def_16 .def_15 .def_14 .def_13))) (let ((.def_18 (<= .def_17 (/ 242424377940967 2251799813685248)))) (let ((.def_19 (* (- (/ 1257100580833907 2251799813685248)) r3))) (let ((.def_20 (* (/ 2333942680272473 1125899906842624) r2))) (let ((.def_21 (* (- (/ 2573021907544063 4503599627370496)) r1))) (let ((.def_22 (* (/ 2571548033104137 9007199254740992) r0))) (let ((.def_23 (+ .def_22 .def_21 .def_20 .def_19))) (let ((.def_24 (<= .def_23 (/ 664203251330675 4503599627370496)))) (let ((.def_25 (or b2 .def_24 .def_18))) (let ((.def_26 (and .def_25 .def_12))) .def_26))))))))))))))))))))))))))))
(check-sat)
