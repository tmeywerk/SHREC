(set-logic QF_LRA)
(declare-fun r0 () Real)
(declare-fun b0 () Bool)
(declare-fun r1 () Real)
(declare-fun r2 () Real)
(declare-fun r3 () Real)
(assert (let ((.def_0 (* (/ 4281795431027057 9007199254740992) r3))) (let ((.def_1 (* (- (/ 2411115671975675 4503599627370496)) r2))) (let ((.def_2 (* (- (/ 465044504789061 9007199254740992)) r1))) (let ((.def_3 (* (- (/ 5794072516414175 9007199254740992)) r0))) (let ((.def_4 (+ .def_3 .def_2 .def_1 .def_0))) (let ((.def_5 (<= .def_4 (- (/ 8542591514633137 9007199254740992))))) (let ((.def_6 (* (- (/ 8876245062273353 9007199254740992)) r3))) (let ((.def_7 (* (/ 4988592434279577 4503599627370496) r2))) (let ((.def_8 (* (/ 2328221242908469 4503599627370496) r1))) (let ((.def_9 (* (/ 3672854252938503 1125899906842624) r0))) (let ((.def_10 (+ .def_9 .def_8 .def_7 .def_6))) (let ((.def_11 (<= .def_10 (- (/ 562573031929893 4503599627370496))))) (let ((.def_12 (not b0))) (let ((.def_13 (or .def_12 .def_11 .def_5))) .def_13)))))))))))))))
(check-sat)
