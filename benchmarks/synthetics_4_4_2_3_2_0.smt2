(set-logic QF_LRA)
(declare-fun b1 () Bool)
(declare-fun r0 () Real)
(declare-fun r1 () Real)
(declare-fun r2 () Real)
(declare-fun r3 () Real)
(assert (let ((.def_0 (* (- (/ 274516678392117 140737488355328)) r3))) (let ((.def_1 (* (/ 5759594501647373 4503599627370496) r2))) (let ((.def_2 (* (/ 1164536431905715 2251799813685248) r1))) (let ((.def_3 (* (/ 8877575992023415 9007199254740992) r0))) (let ((.def_4 (+ .def_3 .def_2 .def_1 .def_0))) (let ((.def_5 (<= .def_4 (/ 3352248645792997 9007199254740992)))) (let ((.def_6 (* (- (/ 3482788466272711 2251799813685248)) r3))) (let ((.def_7 (* (/ 760481910659385 562949953421312) r2))) (let ((.def_8 (* (/ 6643342208334311 4503599627370496) r1))) (let ((.def_9 (* (/ 1780991037759257 2251799813685248) r0))) (let ((.def_10 (+ .def_9 .def_8 .def_7 .def_6))) (let ((.def_11 (<= .def_10 (/ 591535792261573 1125899906842624)))) (let ((.def_12 (not b1))) (let ((.def_13 (or .def_12 .def_11 .def_5))) (let ((.def_14 (* (- (/ 645487738657129 1125899906842624)) r3))) (let ((.def_15 (* (/ 1390454040742523 2251799813685248) r2))) (let ((.def_16 (* (/ 8288522142213615 9007199254740992) r1))) (let ((.def_17 (* (/ 607522249719853 281474976710656) r0))) (let ((.def_18 (+ .def_17 .def_16 .def_15 .def_14))) (let ((.def_19 (<= .def_18 (/ 317197808824069 281474976710656)))) (let ((.def_20 (* (/ 2719898806347715 1125899906842624) r3))) (let ((.def_21 (* (- (/ 3302750303915439 4503599627370496)) r2))) (let ((.def_22 (* (/ 7200285396275815 9007199254740992) r1))) (let ((.def_23 (* (- (/ 114083788963151 562949953421312)) r0))) (let ((.def_24 (+ .def_23 .def_22 .def_21 .def_20))) (let ((.def_25 (<= .def_24 (/ 4746437843052945 9007199254740992)))) (let ((.def_26 (or b1 .def_25 .def_19))) (let ((.def_27 (and .def_26 .def_13))) .def_27)))))))))))))))))))))))))))))
(check-sat)
