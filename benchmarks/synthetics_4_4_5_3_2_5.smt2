(set-logic QF_LRA)
(declare-fun b2 () Bool)
(declare-fun b3 () Bool)
(declare-fun r0 () Real)
(declare-fun b0 () Bool)
(declare-fun r1 () Real)
(declare-fun r2 () Real)
(declare-fun r3 () Real)
(assert (let ((.def_0 (* (- (/ 2790939877602141 4503599627370496)) r3))) (let ((.def_1 (* (/ 1836229930625575 4503599627370496) r2))) (let ((.def_2 (* (- (/ 1916580632361879 2251799813685248)) r1))) (let ((.def_3 (* (/ 325667613031831 9007199254740992) r0))) (let ((.def_4 (+ .def_3 .def_2 .def_1 .def_0))) (let ((.def_5 (<= .def_4 (- (/ 600155442967987 1125899906842624))))) (let ((.def_6 (* (- (/ 3356929277999807 4503599627370496)) r3))) (let ((.def_7 (* (- (/ 3316749014059669 4503599627370496)) r2))) (let ((.def_8 (* (/ 1488336770519861 1125899906842624) r1))) (let ((.def_9 (* (/ 1697198213764075 2251799813685248) r0))) (let ((.def_10 (+ .def_9 .def_8 .def_7 .def_6))) (let ((.def_11 (<= .def_10 (- (/ 46912486926261 2251799813685248))))) (let ((.def_12 (not b0))) (let ((.def_13 (or .def_12 .def_11 .def_5))) (let ((.def_14 (* (/ 4055946872035815 4503599627370496) r3))) (let ((.def_15 (* (- (/ 7970346561599983 9007199254740992)) r2))) (let ((.def_16 (* (- (/ 442379030269435 1125899906842624)) r1))) (let ((.def_17 (* (/ 544368152276033 562949953421312) r0))) (let ((.def_18 (+ .def_17 .def_16 .def_15 .def_14))) (let ((.def_19 (<= .def_18 (/ 1395663948102567 4503599627370496)))) (let ((.def_20 (* (- (/ 437898005892511 4503599627370496)) r3))) (let ((.def_21 (* (- (/ 294233942255513 2251799813685248)) r2))) (let ((.def_22 (* (/ 2718544866092127 4503599627370496) r1))) (let ((.def_23 (* (/ 131684617165011 4503599627370496) r0))) (let ((.def_24 (+ .def_23 .def_22 .def_21 .def_20))) (let ((.def_25 (<= .def_24 (/ 196449847846319 2251799813685248)))) (let ((.def_26 (not b2))) (let ((.def_27 (or .def_26 .def_25 .def_19))) (let ((.def_28 (* (/ 1260759282349617 9007199254740992) r3))) (let ((.def_29 (* (- (/ 1868250968959165 1125899906842624)) r2))) (let ((.def_30 (* (- (/ 4221233981811545 9007199254740992)) r1))) (let ((.def_31 (* (- (/ 754035164526733 1125899906842624)) r0))) (let ((.def_32 (+ .def_31 .def_30 .def_29 .def_28))) (let ((.def_33 (<= .def_32 (- (/ 2208135972663701 2251799813685248))))) (let ((.def_34 (* (- (/ 412860193946733 140737488355328)) r3))) (let ((.def_35 (* (- (/ 2290517437983645 2251799813685248)) r2))) (let ((.def_36 (* (- (/ 3850267282673951 2251799813685248)) r1))) (let ((.def_37 (* (/ 1614910404446629 4503599627370496) r0))) (let ((.def_38 (+ .def_37 .def_36 .def_35 .def_34))) (let ((.def_39 (<= .def_38 (- (/ 1654223167723893 562949953421312))))) (let ((.def_40 (or b3 .def_39 .def_33))) (let ((.def_41 (* (- (/ 1272032735721767 1125899906842624)) r3))) (let ((.def_42 (* (- (/ 2619748067866631 1125899906842624)) r2))) (let ((.def_43 (* (/ 2744540192799707 2251799813685248) r1))) (let ((.def_44 (* (- (/ 930433701373513 4503599627370496)) r0))) (let ((.def_45 (+ .def_44 .def_43 .def_42 .def_41))) (let ((.def_46 (<= .def_45 (- (/ 7653241315905463 9007199254740992))))) (let ((.def_47 (* (- (/ 1887296264246423 1125899906842624)) r3))) (let ((.def_48 (* (- (/ 2194737704939707 9007199254740992)) r2))) (let ((.def_49 (* (- (/ 1820993192474561 1125899906842624)) r1))) (let ((.def_50 (* (/ 8042303830495693 4503599627370496) r0))) (let ((.def_51 (+ .def_50 .def_49 .def_48 .def_47))) (let ((.def_52 (<= .def_51 (- (/ 2560862917148097 2251799813685248))))) (let ((.def_53 (not b3))) (let ((.def_54 (or .def_53 .def_52 .def_46))) (let ((.def_55 (* (- (/ 1121515193963751 1125899906842624)) r3))) (let ((.def_56 (* (/ 3537989017269123 2251799813685248) r2))) (let ((.def_57 (* (/ 2466624852814973 2251799813685248) r1))) (let ((.def_58 (* (/ 1162524178922431 2251799813685248) r0))) (let ((.def_59 (+ .def_58 .def_57 .def_56 .def_55))) (let ((.def_60 (<= .def_59 (/ 3413877833885421 2251799813685248)))) (let ((.def_61 (* (/ 16845306116831 1125899906842624) r3))) (let ((.def_62 (* (/ 4223025913491303 4503599627370496) r2))) (let ((.def_63 (* (- (/ 7723097818196297 9007199254740992)) r1))) (let ((.def_64 (* (/ 417988213349681 2251799813685248) r0))) (let ((.def_65 (+ .def_64 .def_63 .def_62 .def_61))) (let ((.def_66 (<= .def_65 (/ 233324416768745 4503599627370496)))) (let ((.def_67 (or b0 .def_66 .def_60))) (let ((.def_68 (and .def_67 .def_54 .def_40 .def_27 .def_13))) .def_68))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
