(set-logic QF_LRA)
(declare-fun r0 () Real)
(declare-fun b3 () Bool)
(declare-fun r1 () Real)
(declare-fun r2 () Real)
(declare-fun r3 () Real)
(assert (let ((.def_0 (* (/ 4488854693199597 4503599627370496) r3))) (let ((.def_1 (* (- (/ 3689896470058469 4503599627370496)) r2))) (let ((.def_2 (* (/ 520117581107863 2251799813685248) r1))) (let ((.def_3 (* (/ 6911460888473 8796093022208) r0))) (let ((.def_4 (+ .def_3 .def_2 .def_1 .def_0))) (let ((.def_5 (<= .def_4 (- (/ 105658138866671 281474976710656))))) (let ((.def_6 (* (/ 216636666566811 1125899906842624) r3))) (let ((.def_7 (* (/ 370547398251403 562949953421312) r2))) (let ((.def_8 (* (/ 497823542286215 2251799813685248) r1))) (let ((.def_9 (* (- (/ 2693787357023439 4503599627370496)) r0))) (let ((.def_10 (+ .def_9 .def_8 .def_7 .def_6))) (let ((.def_11 (<= .def_10 (- (/ 2836818427275821 4503599627370496))))) (let ((.def_12 (or b3 .def_11 .def_5))) .def_12))))))))))))))
(check-sat)
