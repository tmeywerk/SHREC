(set-logic QF_LRA)
(declare-fun b3 () Bool)
(declare-fun b0 () Bool)
(declare-fun b1 () Bool)
(declare-fun b2 () Bool)
(declare-fun r0 () Real)
(declare-fun r1 () Real)
(declare-fun r2 () Real)
(declare-fun r3 () Real)
(assert (let ((.def_0 (* (/ 678425661515641 2251799813685248) r3))) (let ((.def_1 (* (- (/ 3093225806700365 4503599627370496)) r2))) (let ((.def_2 (* (/ 1638023978140069 4503599627370496) r1))) (let ((.def_3 (* (/ 4327469204023465 4503599627370496) r0))) (let ((.def_4 (+ .def_3 .def_2 .def_1 .def_0))) (let ((.def_5 (<= .def_4 (/ 2496967310861345 4503599627370496)))) (let ((.def_6 (not b2))) (let ((.def_7 (not b3))) (let ((.def_8 (or .def_7 .def_6 .def_5))) (let ((.def_9 (* (- (/ 293244640463477 281474976710656)) r3))) (let ((.def_10 (* (- (/ 695221194382025 4503599627370496)) r2))) (let ((.def_11 (* (/ 2653313940428737 4503599627370496) r1))) (let ((.def_12 (* (/ 715721461442305 1125899906842624) r0))) (let ((.def_13 (+ .def_12 .def_11 .def_10 .def_9))) (let ((.def_14 (<= .def_13 (/ 8567887273649 70368744177664)))) (let ((.def_15 (or b0 b2 .def_14))) (let ((.def_16 (* (- (/ 4653257152861829 2251799813685248)) r3))) (let ((.def_17 (* (/ 6430966497169575 4503599627370496) r2))) (let ((.def_18 (* (/ 659470571472461 562949953421312) r1))) (let ((.def_19 (* (- (/ 3396135773848547 4503599627370496)) r0))) (let ((.def_20 (+ .def_19 .def_18 .def_17 .def_16))) (let ((.def_21 (<= .def_20 (/ 149641311150369 4503599627370496)))) (let ((.def_22 (or .def_6 .def_7 .def_21))) (let ((.def_23 (* (/ 5898870468562083 9007199254740992) r3))) (let ((.def_24 (* (- (/ 664110480943425 1125899906842624)) r2))) (let ((.def_25 (* (- (/ 582391072777901 562949953421312)) r1))) (let ((.def_26 (* (- (/ 2556080333575919 4503599627370496)) r0))) (let ((.def_27 (+ .def_26 .def_25 .def_24 .def_23))) (let ((.def_28 (<= .def_27 (- (/ 4629983318356071 9007199254740992))))) (let ((.def_29 (or b2 b3 .def_28))) (let ((.def_30 (* (- (/ 3026704652587113 1125899906842624)) r3))) (let ((.def_31 (* (/ 3621249515421 70368744177664) r2))) (let ((.def_32 (* (/ 7231436474468895 9007199254740992) r1))) (let ((.def_33 (* (/ 1885645441453149 1125899906842624) r0))) (let ((.def_34 (+ .def_33 .def_32 .def_31 .def_30))) (let ((.def_35 (<= .def_34 (/ 4237413864335369 9007199254740992)))) (let ((.def_36 (not b0))) (let ((.def_37 (not b1))) (let ((.def_38 (or .def_37 .def_36 .def_35))) (let ((.def_39 (* (/ 74899161315015 4503599627370496) r3))) (let ((.def_40 (* (- (/ 5804439875281025 4503599627370496)) r2))) (let ((.def_41 (* (/ 1921148408254065 1125899906842624) r1))) (let ((.def_42 (* (/ 729757186583133 2251799813685248) r0))) (let ((.def_43 (+ .def_42 .def_41 .def_40 .def_39))) (let ((.def_44 (<= .def_43 (/ 3581997784097321 4503599627370496)))) (let ((.def_45 (or b1 b2 .def_44))) (let ((.def_46 (* (- (/ 1290964559875813 4503599627370496)) r3))) (let ((.def_47 (* (/ 2692897271147059 9007199254740992) r2))) (let ((.def_48 (* (/ 441257858548039 4503599627370496) r1))) (let ((.def_49 (* (- (/ 1362580847359359 2251799813685248)) r0))) (let ((.def_50 (+ .def_49 .def_48 .def_47 .def_46))) (let ((.def_51 (<= .def_50 (- (/ 890579617249347 9007199254740992))))) (let ((.def_52 (or b0 b1 .def_51))) (let ((.def_53 (and .def_52 .def_45 .def_38 .def_29 .def_22 .def_15 .def_8))) .def_53)))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
