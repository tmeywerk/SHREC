(set-logic QF_LRA)
(declare-fun b1 () Bool)
(declare-fun r0 () Real)
(declare-fun r1 () Real)
(declare-fun r2 () Real)
(declare-fun b2 () Bool)
(declare-fun r3 () Real)
(assert (let ((.def_0 (* (/ 2069332461141895 1125899906842624) r3))) (let ((.def_1 (* (- (/ 724421186730163 1125899906842624)) r2))) (let ((.def_2 (* (- (/ 2010272232421955 2251799813685248)) r1))) (let ((.def_3 (* (/ 581122222207655 562949953421312) r0))) (let ((.def_4 (+ .def_3 .def_2 .def_1 .def_0))) (let ((.def_5 (<= .def_4 (/ 1364502624842111 4503599627370496)))) (let ((.def_6 (* (- (/ 1483565587854907 1125899906842624)) r3))) (let ((.def_7 (* (- (/ 1647507388441619 9007199254740992)) r2))) (let ((.def_8 (* (- (/ 303128900426427 2251799813685248)) r1))) (let ((.def_9 (* (/ 2891974516555947 2251799813685248) r0))) (let ((.def_10 (+ .def_9 .def_8 .def_7 .def_6))) (let ((.def_11 (<= .def_10 (- (/ 4630546046105657 9007199254740992))))) (let ((.def_12 (or b1 .def_11 .def_5))) (let ((.def_13 (* (/ 4482550009138159 4503599627370496) r3))) (let ((.def_14 (* (- (/ 4829600248679061 9007199254740992)) r2))) (let ((.def_15 (* (- (/ 42340324880091 281474976710656)) r1))) (let ((.def_16 (* (/ 3180799446045779 9007199254740992) r0))) (let ((.def_17 (+ .def_16 .def_15 .def_14 .def_13))) (let ((.def_18 (<= .def_17 (/ 2008668748852707 4503599627370496)))) (let ((.def_19 (* (/ 1638180766964611 1125899906842624) r3))) (let ((.def_20 (* (/ 5509134196640929 2251799813685248) r2))) (let ((.def_21 (* (/ 7688172393147467 4503599627370496) r1))) (let ((.def_22 (* (- (/ 1206449821363371 4503599627370496)) r0))) (let ((.def_23 (+ .def_22 .def_21 .def_20 .def_19))) (let ((.def_24 (<= .def_23 (/ 2670274816594581 1125899906842624)))) (let ((.def_25 (or b2 .def_24 .def_18))) (let ((.def_26 (* (/ 1701281028891143 9007199254740992) r3))) (let ((.def_27 (* (/ 8043766425824227 4503599627370496) r2))) (let ((.def_28 (* (- (/ 2317470103310473 2251799813685248)) r1))) (let ((.def_29 (* (/ 748375358315913 562949953421312) r0))) (let ((.def_30 (+ .def_29 .def_28 .def_27 .def_26))) (let ((.def_31 (<= .def_30 (/ 229610075895565 281474976710656)))) (let ((.def_32 (* (- (/ 2423194125460415 2251799813685248)) r3))) (let ((.def_33 (* (/ 71543252483127 2251799813685248) r2))) (let ((.def_34 (* (/ 7113243831562749 4503599627370496) r1))) (let ((.def_35 (* (- (/ 1574779342483981 9007199254740992)) r0))) (let ((.def_36 (+ .def_35 .def_34 .def_33 .def_32))) (let ((.def_37 (<= .def_36 (/ 23163303591205 2251799813685248)))) (let ((.def_38 (not b2))) (let ((.def_39 (or .def_38 .def_37 .def_31))) (let ((.def_40 (* (/ 2763901850490729 4503599627370496) r3))) (let ((.def_41 (* (/ 5521829514413059 9007199254740992) r2))) (let ((.def_42 (* (- (/ 6872126349667063 4503599627370496)) r1))) (let ((.def_43 (* (/ 4080088563217369 2251799813685248) r0))) (let ((.def_44 (+ .def_43 .def_42 .def_41 .def_40))) (let ((.def_45 (<= .def_44 (/ 7746515982002223 9007199254740992)))) (let ((.def_46 (* (- (/ 7271620433788705 4503599627370496)) r3))) (let ((.def_47 (* (- (/ 6022908711441125 9007199254740992)) r2))) (let ((.def_48 (* (- (/ 309230801249013 9007199254740992)) r1))) (let ((.def_49 (* (- (/ 165369780868479 1125899906842624)) r0))) (let ((.def_50 (+ .def_49 .def_48 .def_47 .def_46))) (let ((.def_51 (<= .def_50 (- (/ 3224123009279759 2251799813685248))))) (let ((.def_52 (or .def_38 .def_51 .def_45))) (let ((.def_53 (and .def_52 .def_39 .def_25 .def_12))) .def_53)))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
