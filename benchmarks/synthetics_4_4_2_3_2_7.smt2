(set-logic QF_LRA)
(declare-fun b1 () Bool)
(declare-fun r0 () Real)
(declare-fun r1 () Real)
(declare-fun b2 () Bool)
(declare-fun r2 () Real)
(declare-fun r3 () Real)
(assert (let ((.def_0 (* (/ 3032293650449525 2251799813685248) r3))) (let ((.def_1 (* (- (/ 4501786488384353 9007199254740992)) r2))) (let ((.def_2 (* (- (/ 3654386281164559 4503599627370496)) r1))) (let ((.def_3 (* (- (/ 2204623000000879 2251799813685248)) r0))) (let ((.def_4 (+ .def_3 .def_2 .def_1 .def_0))) (let ((.def_5 (<= .def_4 (- (/ 4570996641809455 4503599627370496))))) (let ((.def_6 (* (- (/ 3006064596427751 9007199254740992)) r3))) (let ((.def_7 (* (/ 344622559745895 2251799813685248) r2))) (let ((.def_8 (* (/ 602158459711213 1125899906842624) r1))) (let ((.def_9 (* (- (/ 445183919930421 4503599627370496)) r0))) (let ((.def_10 (+ .def_9 .def_8 .def_7 .def_6))) (let ((.def_11 (<= .def_10 (- (/ 327502256173799 4503599627370496))))) (let ((.def_12 (not b1))) (let ((.def_13 (or .def_12 .def_11 .def_5))) (let ((.def_14 (* (/ 15558127658893 17592186044416) r3))) (let ((.def_15 (* (/ 191147925664635 281474976710656) r2))) (let ((.def_16 (* (/ 1467783986861849 2251799813685248) r1))) (let ((.def_17 (* (- (/ 1353901702877073 2251799813685248)) r0))) (let ((.def_18 (+ .def_17 .def_16 .def_15 .def_14))) (let ((.def_19 (<= .def_18 (/ 196304377456493 1125899906842624)))) (let ((.def_20 (* (- (/ 82923503274323 2251799813685248)) r3))) (let ((.def_21 (* (- (/ 3040195474320537 4503599627370496)) r2))) (let ((.def_22 (* (/ 5645696176028827 4503599627370496) r1))) (let ((.def_23 (* (/ 3710257192106961 4503599627370496) r0))) (let ((.def_24 (+ .def_23 .def_22 .def_21 .def_20))) (let ((.def_25 (<= .def_24 (/ 4802785992345751 9007199254740992)))) (let ((.def_26 (or b2 .def_25 .def_19))) (let ((.def_27 (and .def_26 .def_13))) .def_27)))))))))))))))))))))))))))))
(check-sat)
