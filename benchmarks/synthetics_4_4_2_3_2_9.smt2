(set-logic QF_LRA)
(declare-fun b1 () Bool)
(declare-fun r0 () Real)
(declare-fun r1 () Real)
(declare-fun r2 () Real)
(declare-fun b3 () Bool)
(declare-fun r3 () Real)
(assert (let ((.def_0 (* (- (/ 694509526548645 2251799813685248)) r3))) (let ((.def_1 (* (- (/ 1927530312975411 2251799813685248)) r2))) (let ((.def_2 (* (/ 1725713043326491 2251799813685248) r1))) (let ((.def_3 (* (/ 8881517981084887 9007199254740992) r0))) (let ((.def_4 (+ .def_3 .def_2 .def_1 .def_0))) (let ((.def_5 (<= .def_4 (/ 143964385436589 4503599627370496)))) (let ((.def_6 (* (/ 2845743322010059 9007199254740992) r3))) (let ((.def_7 (* (- (/ 1986321370808353 2251799813685248)) r2))) (let ((.def_8 (* (/ 2123786786589711 4503599627370496) r1))) (let ((.def_9 (* (- (/ 1450506842684379 9007199254740992)) r0))) (let ((.def_10 (+ .def_9 .def_8 .def_7 .def_6))) (let ((.def_11 (<= .def_10 (- (/ 4251614234551563 9007199254740992))))) (let ((.def_12 (or b3 .def_11 .def_5))) (let ((.def_13 (* (/ 3243955848784373 4503599627370496) r3))) (let ((.def_14 (* (- (/ 1018047642308907 4503599627370496)) r2))) (let ((.def_15 (* (- (/ 1566115795871351 4503599627370496)) r1))) (let ((.def_16 (* (- (/ 4077857853615389 4503599627370496)) r0))) (let ((.def_17 (+ .def_16 .def_15 .def_14 .def_13))) (let ((.def_18 (<= .def_17 (- (/ 5374407678847471 9007199254740992))))) (let ((.def_19 (* (/ 7694549404757087 9007199254740992) r3))) (let ((.def_20 (* (- (/ 7601860996523135 9007199254740992)) r2))) (let ((.def_21 (* (- (/ 6429451491270111 9007199254740992)) r1))) (let ((.def_22 (* (/ 4731972682494659 4503599627370496) r0))) (let ((.def_23 (+ .def_22 .def_21 .def_20 .def_19))) (let ((.def_24 (<= .def_23 (- (/ 2410494408800831 9007199254740992))))) (let ((.def_25 (not b1))) (let ((.def_26 (or .def_25 .def_24 .def_18))) (let ((.def_27 (and .def_26 .def_12))) .def_27)))))))))))))))))))))))))))))
(check-sat)
