(set-logic QF_LRA)
(declare-fun b1 () Bool)
(declare-fun r0 () Real)
(declare-fun b0 () Bool)
(declare-fun r1 () Real)
(declare-fun r2 () Real)
(declare-fun b2 () Bool)
(declare-fun r3 () Real)
(assert (let ((.def_0 (* (/ 8303852288190069 4503599627370496) r3))) (let ((.def_1 (* (- (/ 578013524330661 281474976710656)) r2))) (let ((.def_2 (* (/ 76114353215553 140737488355328) r1))) (let ((.def_3 (* (/ 5339737392164595 4503599627370496) r0))) (let ((.def_4 (+ .def_3 .def_2 .def_1 .def_0))) (let ((.def_5 (<= .def_4 (/ 547239189675085 1125899906842624)))) (let ((.def_6 (* (- (/ 879216130676211 9007199254740992)) r3))) (let ((.def_7 (* (/ 6644494237801313 9007199254740992) r2))) (let ((.def_8 (* (/ 1933699441439733 1125899906842624) r1))) (let ((.def_9 (* (/ 3624206089063017 9007199254740992) r0))) (let ((.def_10 (+ .def_9 .def_8 .def_7 .def_6))) (let ((.def_11 (<= .def_10 (/ 2415243254338557 2251799813685248)))) (let ((.def_12 (not b2))) (let ((.def_13 (or .def_12 .def_11 .def_5))) (let ((.def_14 (* (- (/ 1737368217366207 2251799813685248)) r3))) (let ((.def_15 (* (- (/ 4323618323198789 9007199254740992)) r2))) (let ((.def_16 (* (/ 4300313314342773 2251799813685248) r1))) (let ((.def_17 (* (- (/ 6309338149941497 2251799813685248)) r0))) (let ((.def_18 (+ .def_17 .def_16 .def_15 .def_14))) (let ((.def_19 (<= .def_18 (- (/ 6841243696522089 9007199254740992))))) (let ((.def_20 (* (/ 3902275351018935 4503599627370496) r3))) (let ((.def_21 (* (/ 199882210962643 1125899906842624) r2))) (let ((.def_22 (* (/ 267891271950501 2251799813685248) r1))) (let ((.def_23 (* (- (/ 2959673752728243 4503599627370496)) r0))) (let ((.def_24 (+ .def_23 .def_22 .def_21 .def_20))) (let ((.def_25 (<= .def_24 (/ 540353128444025 4503599627370496)))) (let ((.def_26 (or b0 .def_25 .def_19))) (let ((.def_27 (* (/ 4680003001827211 4503599627370496) r3))) (let ((.def_28 (* (- (/ 6557096817767663 2251799813685248)) r2))) (let ((.def_29 (* (- (/ 2511714620755601 4503599627370496)) r1))) (let ((.def_30 (* (- (/ 6046154100756191 4503599627370496)) r0))) (let ((.def_31 (+ .def_30 .def_29 .def_28 .def_27))) (let ((.def_32 (<= .def_31 (- (/ 7129163396128293 4503599627370496))))) (let ((.def_33 (* (/ 6523258659068025 9007199254740992) r3))) (let ((.def_34 (* (/ 2090937533460103 4503599627370496) r2))) (let ((.def_35 (* (/ 3177831047952437 9007199254740992) r1))) (let ((.def_36 (* (/ 843174200906353 1125899906842624) r0))) (let ((.def_37 (+ .def_36 .def_35 .def_34 .def_33))) (let ((.def_38 (<= .def_37 (/ 7198185847036473 9007199254740992)))) (let ((.def_39 (not b0))) (let ((.def_40 (or .def_39 .def_38 .def_32))) (let ((.def_41 (* (- (/ 3459281268929721 1125899906842624)) r3))) (let ((.def_42 (* (/ 78051090927615 2251799813685248) r2))) (let ((.def_43 (* (/ 388359874382087 281474976710656) r1))) (let ((.def_44 (* (- (/ 350222583852317 140737488355328)) r0))) (let ((.def_45 (+ .def_44 .def_43 .def_42 .def_41))) (let ((.def_46 (<= .def_45 (- (/ 3561933137241603 2251799813685248))))) (let ((.def_47 (* (/ 3124274904783353 9007199254740992) r3))) (let ((.def_48 (* (- (/ 3489066547262193 2251799813685248)) r2))) (let ((.def_49 (* (- (/ 5465849736873349 9007199254740992)) r1))) (let ((.def_50 (* (- (/ 7803085842478519 9007199254740992)) r0))) (let ((.def_51 (+ .def_50 .def_49 .def_48 .def_47))) (let ((.def_52 (<= .def_51 (- (/ 1734958274775257 1125899906842624))))) (let ((.def_53 (or b1 .def_52 .def_46))) (let ((.def_54 (and .def_53 .def_40 .def_26 .def_13))) .def_54))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
