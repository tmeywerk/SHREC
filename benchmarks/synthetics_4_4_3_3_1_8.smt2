(set-logic QF_LRA)
(declare-fun b3 () Bool)
(declare-fun b0 () Bool)
(declare-fun b1 () Bool)
(declare-fun r0 () Real)
(declare-fun r1 () Real)
(declare-fun r2 () Real)
(declare-fun r3 () Real)
(declare-fun b2 () Bool)
(assert (let ((.def_0 (* (/ 3236346374582681 4503599627370496) r3))) (let ((.def_1 (* (- (/ 1248739164686487 1125899906842624)) r2))) (let ((.def_2 (* (- (/ 8082564555769573 9007199254740992)) r1))) (let ((.def_3 (* (/ 801637698076003 2251799813685248) r0))) (let ((.def_4 (+ .def_3 .def_2 .def_1 .def_0))) (let ((.def_5 (<= .def_4 (- (/ 80560107545945 70368744177664))))) (let ((.def_6 (not b0))) (let ((.def_7 (or .def_6 b3 .def_5))) (let ((.def_8 (* (- (/ 66120270163783 2251799813685248)) r3))) (let ((.def_9 (* (- (/ 5814618352957279 4503599627370496)) r2))) (let ((.def_10 (* (/ 2517708996943501 1125899906842624) r1))) (let ((.def_11 (* (- (/ 492102009339519 2251799813685248)) r0))) (let ((.def_12 (+ .def_11 .def_10 .def_9 .def_8))) (let ((.def_13 (<= .def_12 (/ 95613410878693 2251799813685248)))) (let ((.def_14 (or b3 b2 .def_13))) (let ((.def_15 (* (- (/ 2083480720965487 1125899906842624)) r3))) (let ((.def_16 (* (/ 2416953380370645 4503599627370496) r2))) (let ((.def_17 (* (/ 851565611506543 1125899906842624) r1))) (let ((.def_18 (* (- (/ 1225513877717521 2251799813685248)) r0))) (let ((.def_19 (+ .def_18 .def_17 .def_16 .def_15))) (let ((.def_20 (<= .def_19 (- (/ 918958484654817 1125899906842624))))) (let ((.def_21 (not b3))) (let ((.def_22 (or b1 .def_21 .def_20))) (let ((.def_23 (and .def_22 .def_14 .def_7))) .def_23)))))))))))))))))))))))))
(check-sat)
