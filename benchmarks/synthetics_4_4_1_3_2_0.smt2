(set-logic QF_LRA)
(declare-fun b1 () Bool)
(declare-fun r0 () Real)
(declare-fun r1 () Real)
(declare-fun r2 () Real)
(declare-fun r3 () Real)
(assert (let ((.def_0 (* (/ 4009470699085543 4503599627370496) r3))) (let ((.def_1 (* (/ 3142705303681675 9007199254740992) r2))) (let ((.def_2 (* (/ 452351037173925 281474976710656) r1))) (let ((.def_3 (* (/ 1892343651886031 2251799813685248) r0))) (let ((.def_4 (+ .def_3 .def_2 .def_1 .def_0))) (let ((.def_5 (<= .def_4 (/ 1863829164750569 4503599627370496)))) (let ((.def_6 (* (/ 2845965893491015 4503599627370496) r3))) (let ((.def_7 (* (- (/ 1650320183350699 4503599627370496)) r2))) (let ((.def_8 (* (/ 2983433329474161 4503599627370496) r1))) (let ((.def_9 (* (/ 7317490622895045 9007199254740992) r0))) (let ((.def_10 (+ .def_9 .def_8 .def_7 .def_6))) (let ((.def_11 (<= .def_10 (- (/ 4070365538414353 9007199254740992))))) (let ((.def_12 (not b1))) (let ((.def_13 (or .def_12 .def_11 .def_5))) .def_13)))))))))))))))
(check-sat)
