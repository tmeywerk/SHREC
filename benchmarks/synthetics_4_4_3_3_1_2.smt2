(set-logic QF_LRA)
(declare-fun r3 () Real)
(declare-fun b3 () Bool)
(declare-fun b0 () Bool)
(declare-fun b1 () Bool)
(declare-fun r0 () Real)
(declare-fun r1 () Real)
(declare-fun r2 () Real)
(assert (let ((.def_0 (* (/ 1879235305894909 4503599627370496) r3))) (let ((.def_1 (* (- (/ 135243243881045 4503599627370496)) r2))) (let ((.def_2 (* (/ 2631624107047703 9007199254740992) r1))) (let ((.def_3 (* (/ 4311623069202657 9007199254740992) r0))) (let ((.def_4 (+ .def_3 .def_2 .def_1 .def_0))) (let ((.def_5 (<= .def_4 (/ 651671084594345 4503599627370496)))) (let ((.def_6 (or b0 b3 .def_5))) (let ((.def_7 (* (- (/ 8844827533863085 4503599627370496)) r3))) (let ((.def_8 (* (/ 2246765771002193 4503599627370496) r2))) (let ((.def_9 (* (/ 249307577317665 4503599627370496) r1))) (let ((.def_10 (* (/ 2476408047670553 9007199254740992) r0))) (let ((.def_11 (+ .def_10 .def_9 .def_8 .def_7))) (let ((.def_12 (<= .def_11 (- (/ 4493022201931349 4503599627370496))))) (let ((.def_13 (not b0))) (let ((.def_14 (not b3))) (let ((.def_15 (or .def_14 .def_13 .def_12))) (let ((.def_16 (* (/ 3581566084306145 4503599627370496) r3))) (let ((.def_17 (* (- (/ 958287496466195 1125899906842624)) r2))) (let ((.def_18 (* (/ 2708480147194163 2251799813685248) r1))) (let ((.def_19 (* (/ 982131509796703 1125899906842624) r0))) (let ((.def_20 (+ .def_19 .def_18 .def_17 .def_16))) (let ((.def_21 (<= .def_20 (/ 505658847541291 562949953421312)))) (let ((.def_22 (or b0 b1 .def_21))) (let ((.def_23 (and .def_22 .def_15 .def_6))) .def_23)))))))))))))))))))))))))
(check-sat)
