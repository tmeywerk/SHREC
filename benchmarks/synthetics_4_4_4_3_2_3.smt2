(set-logic QF_LRA)
(declare-fun b1 () Bool)
(declare-fun r0 () Real)
(declare-fun r1 () Real)
(declare-fun r2 () Real)
(declare-fun r3 () Real)
(assert (let ((.def_0 (* (/ 659256884765677 281474976710656) r3))) (let ((.def_1 (* (- (/ 2039180976454001 1125899906842624)) r2))) (let ((.def_2 (* (/ 287952503870665 4503599627370496) r1))) (let ((.def_3 (* (- (/ 833612371964977 9007199254740992)) r0))) (let ((.def_4 (+ .def_3 .def_2 .def_1 .def_0))) (let ((.def_5 (<= .def_4 (- (/ 10138664322087 2251799813685248))))) (let ((.def_6 (* (- (/ 2315432746995211 2251799813685248)) r3))) (let ((.def_7 (* (/ 855395743591355 1125899906842624) r2))) (let ((.def_8 (* (/ 3644121668779423 9007199254740992) r1))) (let ((.def_9 (* (- (/ 2931089829540809 9007199254740992)) r0))) (let ((.def_10 (+ .def_9 .def_8 .def_7 .def_6))) (let ((.def_11 (<= .def_10 (- (/ 2189724324486907 9007199254740992))))) (let ((.def_12 (or b1 .def_11 .def_5))) (let ((.def_13 (* (- (/ 2948593378425923 2251799813685248)) r3))) (let ((.def_14 (* (- (/ 346586726083095 9007199254740992)) r2))) (let ((.def_15 (* (- (/ 1212592361265231 1125899906842624)) r1))) (let ((.def_16 (* (/ 2497112189698243 1125899906842624) r0))) (let ((.def_17 (+ .def_16 .def_15 .def_14 .def_13))) (let ((.def_18 (<= .def_17 (/ 565791159147811 2251799813685248)))) (let ((.def_19 (* (- (/ 513203030673545 2251799813685248)) r3))) (let ((.def_20 (* (- (/ 3353918782304117 2251799813685248)) r2))) (let ((.def_21 (* (- (/ 3022068659551677 2251799813685248)) r1))) (let ((.def_22 (* (/ 1231078342525481 2251799813685248) r0))) (let ((.def_23 (+ .def_22 .def_21 .def_20 .def_19))) (let ((.def_24 (<= .def_23 (- (/ 5824298068896435 4503599627370496))))) (let ((.def_25 (not b1))) (let ((.def_26 (or .def_25 .def_24 .def_18))) (let ((.def_27 (* (/ 2762653287910741 1125899906842624) r3))) (let ((.def_28 (* (/ 5278260192285833 1125899906842624) r2))) (let ((.def_29 (* (/ 575367490303363 70368744177664) r1))) (let ((.def_30 (* (/ 6196900579127811 1125899906842624) r0))) (let ((.def_31 (+ .def_30 .def_29 .def_28 .def_27))) (let ((.def_32 (<= .def_31 (- (/ 287531872529879 70368744177664))))) (let ((.def_33 (* (/ 287304617409455 1125899906842624) r3))) (let ((.def_34 (* (/ 4952277297683277 9007199254740992) r2))) (let ((.def_35 (* (- (/ 1031969972831505 4503599627370496)) r1))) (let ((.def_36 (* (- (/ 232173779576993 140737488355328)) r0))) (let ((.def_37 (+ .def_36 .def_35 .def_34 .def_33))) (let ((.def_38 (<= .def_37 (- (/ 1624279346277541 4503599627370496))))) (let ((.def_39 (or .def_25 .def_38 .def_32))) (let ((.def_40 (* (/ 4125292026406161 9007199254740992) r3))) (let ((.def_41 (* (- (/ 1728189095501431 2251799813685248)) r2))) (let ((.def_42 (* (/ 4876100415936379 9007199254740992) r1))) (let ((.def_43 (* (- (/ 5198259887896031 2251799813685248)) r0))) (let ((.def_44 (+ .def_43 .def_42 .def_41 .def_40))) (let ((.def_45 (<= .def_44 (- (/ 7657121785643863 9007199254740992))))) (let ((.def_46 (* (/ 4064811892150097 9007199254740992) r3))) (let ((.def_47 (* (/ 6413408797935613 9007199254740992) r2))) (let ((.def_48 (* (- (/ 2048190743658245 4503599627370496)) r1))) (let ((.def_49 (* (- (/ 152693743004743 2251799813685248)) r0))) (let ((.def_50 (+ .def_49 .def_48 .def_47 .def_46))) (let ((.def_51 (<= .def_50 (/ 1070871019405057 4503599627370496)))) (let ((.def_52 (or .def_25 .def_51 .def_45))) (let ((.def_53 (and .def_52 .def_39 .def_26 .def_12))) .def_53)))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
