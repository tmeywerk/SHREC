(set-logic QF_LRA)
(declare-fun r0 () Real)
(declare-fun b0 () Bool)
(declare-fun r1 () Real)
(declare-fun r2 () Real)
(declare-fun r3 () Real)
(assert (let ((.def_0 (* (- (/ 1273233510130309 4503599627370496)) r3))) (let ((.def_1 (* (/ 293771476721603 562949953421312) r2))) (let ((.def_2 (* (/ 1628934993713337 2251799813685248) r1))) (let ((.def_3 (* (/ 782614696714741 2251799813685248) r0))) (let ((.def_4 (+ .def_3 .def_2 .def_1 .def_0))) (let ((.def_5 (<= .def_4 (- (/ 43032557730613 2251799813685248))))) (let ((.def_6 (* (- (/ 374113934354317 4503599627370496)) r3))) (let ((.def_7 (* (/ 1725565551678861 2251799813685248) r2))) (let ((.def_8 (* (/ 2321630347261471 2251799813685248) r1))) (let ((.def_9 (* (- (/ 2782589239082671 4503599627370496)) r0))) (let ((.def_10 (+ .def_9 .def_8 .def_7 .def_6))) (let ((.def_11 (<= .def_10 (- (/ 4177955730161525 9007199254740992))))) (let ((.def_12 (not b0))) (let ((.def_13 (or .def_12 .def_11 .def_5))) .def_13)))))))))))))))
(check-sat)
