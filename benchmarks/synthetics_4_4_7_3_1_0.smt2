(set-logic QF_LRA)
(declare-fun b3 () Bool)
(declare-fun b0 () Bool)
(declare-fun b1 () Bool)
(declare-fun b2 () Bool)
(declare-fun r0 () Real)
(declare-fun r1 () Real)
(declare-fun r2 () Real)
(declare-fun r3 () Real)
(assert (let ((.def_0 (* (/ 515088208083347 2251799813685248) r3))) (let ((.def_1 (* (/ 2959978560092961 4503599627370496) r2))) (let ((.def_2 (* (- (/ 2155607652139531 4503599627370496)) r1))) (let ((.def_3 (* (- (/ 3926845258253461 4503599627370496)) r0))) (let ((.def_4 (+ .def_3 .def_2 .def_1 .def_0))) (let ((.def_5 (<= .def_4 (- (/ 185389392153185 1125899906842624))))) (let ((.def_6 (not b0))) (let ((.def_7 (not b3))) (let ((.def_8 (or .def_7 .def_6 .def_5))) (let ((.def_9 (* (- (/ 2093233753794255 9007199254740992)) r3))) (let ((.def_10 (* (- (/ 155189943110795 140737488355328)) r2))) (let ((.def_11 (* (/ 3959414853513839 4503599627370496) r1))) (let ((.def_12 (* (/ 1565657472751265 1125899906842624) r0))) (let ((.def_13 (+ .def_12 .def_11 .def_10 .def_9))) (let ((.def_14 (<= .def_13 (/ 1785944206160507 4503599627370496)))) (let ((.def_15 (not b2))) (let ((.def_16 (or .def_15 b1 .def_14))) (let ((.def_17 (* (- (/ 82638571746589 562949953421312)) r3))) (let ((.def_18 (* (- (/ 2965130823129355 9007199254740992)) r2))) (let ((.def_19 (* (/ 794422766957979 1125899906842624) r1))) (let ((.def_20 (* (/ 1787199394439455 2251799813685248) r0))) (let ((.def_21 (+ .def_20 .def_19 .def_18 .def_17))) (let ((.def_22 (<= .def_21 (/ 3036912981972709 4503599627370496)))) (let ((.def_23 (or .def_15 .def_7 .def_22))) (let ((.def_24 (* (- (/ 3819516897665443 9007199254740992)) r3))) (let ((.def_25 (* (/ 1371562615603575 2251799813685248) r2))) (let ((.def_26 (* (- (/ 6056526751960841 9007199254740992)) r1))) (let ((.def_27 (* (- (/ 1477041099769385 4503599627370496)) r0))) (let ((.def_28 (+ .def_27 .def_26 .def_25 .def_24))) (let ((.def_29 (<= .def_28 (- (/ 3325884657624875 9007199254740992))))) (let ((.def_30 (not b1))) (let ((.def_31 (or .def_30 b0 .def_29))) (let ((.def_32 (* (/ 1284775769406071 2251799813685248) r3))) (let ((.def_33 (* (- (/ 2887526863386125 9007199254740992)) r2))) (let ((.def_34 (* (- (/ 1249815478493893 562949953421312)) r1))) (let ((.def_35 (* (- (/ 1055963812809711 2251799813685248)) r0))) (let ((.def_36 (+ .def_35 .def_34 .def_33 .def_32))) (let ((.def_37 (<= .def_36 (- (/ 1686168677471289 2251799813685248))))) (let ((.def_38 (or .def_6 .def_30 .def_37))) (let ((.def_39 (* (- (/ 4726012248794269 9007199254740992)) r3))) (let ((.def_40 (* (/ 5602309334168221 4503599627370496) r2))) (let ((.def_41 (* (- (/ 4396844699154927 2251799813685248)) r1))) (let ((.def_42 (* (- (/ 746449240728549 1125899906842624)) r0))) (let ((.def_43 (+ .def_42 .def_41 .def_40 .def_39))) (let ((.def_44 (<= .def_43 (- (/ 1172694049413441 2251799813685248))))) (let ((.def_45 (or b0 b3 .def_44))) (let ((.def_46 (* (- (/ 1541749191582787 1125899906842624)) r3))) (let ((.def_47 (* (- (/ 6012583143460143 9007199254740992)) r2))) (let ((.def_48 (* (- (/ 1574977207243245 9007199254740992)) r1))) (let ((.def_49 (* (/ 26385126284865 140737488355328) r0))) (let ((.def_50 (+ .def_49 .def_48 .def_47 .def_46))) (let ((.def_51 (<= .def_50 (- (/ 6640830238471143 9007199254740992))))) (let ((.def_52 (or .def_6 .def_15 .def_51))) (let ((.def_53 (and .def_52 .def_45 .def_38 .def_31 .def_23 .def_16 .def_8))) .def_53)))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
