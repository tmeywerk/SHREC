(set-logic QF_LRA)
(declare-fun b1 () Bool)
(declare-fun r0 () Real)
(declare-fun r1 () Real)
(declare-fun r2 () Real)
(declare-fun r3 () Real)
(assert (let ((.def_0 (* (/ 2366361087053305 4503599627370496) r3))) (let ((.def_1 (* (/ 2884341825635865 4503599627370496) r2))) (let ((.def_2 (* (- (/ 2321610845917411 4503599627370496)) r1))) (let ((.def_3 (* (/ 108598461540309 281474976710656) r0))) (let ((.def_4 (+ .def_3 .def_2 .def_1 .def_0))) (let ((.def_5 (<= .def_4 (- (/ 3579339203771581 4503599627370496))))) (let ((.def_6 (* (/ 4499537881777773 2251799813685248) r3))) (let ((.def_7 (* (/ 5578970131648401 2251799813685248) r2))) (let ((.def_8 (* (/ 989308110949789 4503599627370496) r1))) (let ((.def_9 (* (- (/ 593628541190697 1125899906842624)) r0))) (let ((.def_10 (+ .def_9 .def_8 .def_7 .def_6))) (let ((.def_11 (<= .def_10 (- (/ 3518689004200639 9007199254740992))))) (let ((.def_12 (not b1))) (let ((.def_13 (or .def_12 .def_11 .def_5))) .def_13)))))))))))))))
(check-sat)
