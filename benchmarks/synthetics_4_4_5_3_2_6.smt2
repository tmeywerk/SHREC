(set-logic QF_LRA)
(declare-fun b2 () Bool)
(declare-fun b3 () Bool)
(declare-fun r0 () Real)
(declare-fun b0 () Bool)
(declare-fun r1 () Real)
(declare-fun b1 () Bool)
(declare-fun r2 () Real)
(declare-fun r3 () Real)
(assert (let ((.def_0 (* (- (/ 600951292620687 281474976710656)) r3))) (let ((.def_1 (* (- (/ 7656271188710943 4503599627370496)) r2))) (let ((.def_2 (* (- (/ 7312085621825411 9007199254740992)) r1))) (let ((.def_3 (* (- (/ 971621185090329 9007199254740992)) r0))) (let ((.def_4 (+ .def_3 .def_2 .def_1 .def_0))) (let ((.def_5 (<= .def_4 (- (/ 8894560430516545 4503599627370496))))) (let ((.def_6 (* (/ 324182944486761 281474976710656) r3))) (let ((.def_7 (* (- (/ 1902750054426009 1125899906842624)) r2))) (let ((.def_8 (* (/ 1636966749861963 4503599627370496) r1))) (let ((.def_9 (* (/ 1226902634981161 2251799813685248) r0))) (let ((.def_10 (+ .def_9 .def_8 .def_7 .def_6))) (let ((.def_11 (<= .def_10 (/ 116670676630743 1125899906842624)))) (let ((.def_12 (or b3 .def_11 .def_5))) (let ((.def_13 (* (/ 1409376871275325 9007199254740992) r3))) (let ((.def_14 (* (- (/ 7616237893347539 4503599627370496)) r2))) (let ((.def_15 (* (/ 2265638148185093 9007199254740992) r1))) (let ((.def_16 (* (/ 298945583937407 140737488355328) r0))) (let ((.def_17 (+ .def_16 .def_15 .def_14 .def_13))) (let ((.def_18 (<= .def_17 (/ 7419857086305199 9007199254740992)))) (let ((.def_19 (* (- (/ 1293179011763161 2251799813685248)) r3))) (let ((.def_20 (* (/ 1550901089570267 4503599627370496) r2))) (let ((.def_21 (* (- (/ 72899184329081 2251799813685248)) r1))) (let ((.def_22 (* (/ 1736698921466611 2251799813685248) r0))) (let ((.def_23 (+ .def_22 .def_21 .def_20 .def_19))) (let ((.def_24 (<= .def_23 (/ 339679754973515 2251799813685248)))) (let ((.def_25 (not b3))) (let ((.def_26 (or .def_25 .def_24 .def_18))) (let ((.def_27 (* (/ 845170238404689 2251799813685248) r3))) (let ((.def_28 (* (/ 4209456803187163 2251799813685248) r2))) (let ((.def_29 (* (- (/ 427429036721057 2251799813685248)) r1))) (let ((.def_30 (* (- (/ 5041649752279923 2251799813685248)) r0))) (let ((.def_31 (+ .def_30 .def_29 .def_28 .def_27))) (let ((.def_32 (<= .def_31 (/ 1516368017153189 9007199254740992)))) (let ((.def_33 (* (- (/ 4295243253447945 9007199254740992)) r3))) (let ((.def_34 (* (/ 2481541335284333 1125899906842624) r2))) (let ((.def_35 (* (- (/ 2290188659015661 2251799813685248)) r1))) (let ((.def_36 (* (/ 2860284387022783 4503599627370496) r0))) (let ((.def_37 (+ .def_36 .def_35 .def_34 .def_33))) (let ((.def_38 (<= .def_37 (/ 3362272609363527 9007199254740992)))) (let ((.def_39 (not b0))) (let ((.def_40 (or .def_39 .def_38 .def_32))) (let ((.def_41 (* (/ 751730784901815 281474976710656) r3))) (let ((.def_42 (* (/ 5012279247497227 9007199254740992) r2))) (let ((.def_43 (* (- (/ 7164747372613551 9007199254740992)) r1))) (let ((.def_44 (* (/ 8546986680264389 9007199254740992) r0))) (let ((.def_45 (+ .def_44 .def_43 .def_42 .def_41))) (let ((.def_46 (<= .def_45 (/ 1168701142435055 562949953421312)))) (let ((.def_47 (* (/ 2966582955777131 4503599627370496) r3))) (let ((.def_48 (* (/ 172152115411671 1125899906842624) r2))) (let ((.def_49 (* (/ 1394351406042673 1125899906842624) r1))) (let ((.def_50 (* (- (/ 1340073320224095 2251799813685248)) r0))) (let ((.def_51 (+ .def_50 .def_49 .def_48 .def_47))) (let ((.def_52 (<= .def_51 (/ 1412518006302477 2251799813685248)))) (let ((.def_53 (or b2 .def_52 .def_46))) (let ((.def_54 (* (- (/ 8941081187715749 9007199254740992)) r3))) (let ((.def_55 (* (/ 186904373611155 9007199254740992) r2))) (let ((.def_56 (* (- (/ 3432732445627035 4503599627370496)) r1))) (let ((.def_57 (* (- (/ 3234780960127845 4503599627370496)) r0))) (let ((.def_58 (+ .def_57 .def_56 .def_55 .def_54))) (let ((.def_59 (<= .def_58 (- (/ 4008452645779019 4503599627370496))))) (let ((.def_60 (* (- (/ 8566920607206173 4503599627370496)) r3))) (let ((.def_61 (* (/ 2118185140539651 2251799813685248) r2))) (let ((.def_62 (* (- (/ 1451537474059653 1125899906842624)) r1))) (let ((.def_63 (* (/ 1819046865509085 9007199254740992) r0))) (let ((.def_64 (+ .def_63 .def_62 .def_61 .def_60))) (let ((.def_65 (<= .def_64 (- (/ 1428456145977027 1125899906842624))))) (let ((.def_66 (or b1 .def_65 .def_59))) (let ((.def_67 (and .def_66 .def_53 .def_40 .def_26 .def_12))) .def_67)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
