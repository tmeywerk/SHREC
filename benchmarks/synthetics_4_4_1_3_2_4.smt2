(set-logic QF_LRA)
(declare-fun r0 () Real)
(declare-fun b3 () Bool)
(declare-fun r1 () Real)
(declare-fun r2 () Real)
(declare-fun r3 () Real)
(assert (let ((.def_0 (* (/ 5759159817487653 2251799813685248) r3))) (let ((.def_1 (* (- (/ 5007692477356327 9007199254740992)) r2))) (let ((.def_2 (* (/ 3346302474308661 4503599627370496) r1))) (let ((.def_3 (* (/ 182750530994073 9007199254740992) r0))) (let ((.def_4 (+ .def_3 .def_2 .def_1 .def_0))) (let ((.def_5 (<= .def_4 (/ 72599581244521 9007199254740992)))) (let ((.def_6 (* (- (/ 1776473838579885 2251799813685248)) r3))) (let ((.def_7 (* (- (/ 7857359596355635 9007199254740992)) r2))) (let ((.def_8 (* (/ 7170256219425881 9007199254740992) r1))) (let ((.def_9 (* (/ 5097963472396337 2251799813685248) r0))) (let ((.def_10 (+ .def_9 .def_8 .def_7 .def_6))) (let ((.def_11 (<= .def_10 (- (/ 28938351732031 35184372088832))))) (let ((.def_12 (not b3))) (let ((.def_13 (or .def_12 .def_11 .def_5))) .def_13)))))))))))))))
(check-sat)
