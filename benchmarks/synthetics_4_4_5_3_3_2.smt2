(set-logic QF_LRA)
(declare-fun r2 () Real)
(declare-fun r0 () Real)
(declare-fun r3 () Real)
(declare-fun r1 () Real)
(assert (let ((.def_0 (* (- (/ 3043023564074819 9007199254740992)) r3))) (let ((.def_1 (* (- (/ 5576838271631431 9007199254740992)) r2))) (let ((.def_2 (* (/ 369881283955313 2251799813685248) r1))) (let ((.def_3 (* (/ 2508992752487091 2251799813685248) r0))) (let ((.def_4 (+ .def_3 .def_2 .def_1 .def_0))) (let ((.def_5 (<= .def_4 (/ 487309996989753 1125899906842624)))) (let ((.def_6 (* (/ 613498142683177 4503599627370496) r3))) (let ((.def_7 (* (- (/ 2007693193393179 9007199254740992)) r2))) (let ((.def_8 (* (/ 4437583941426139 4503599627370496) r1))) (let ((.def_9 (* (- (/ 233424204069453 562949953421312)) r0))) (let ((.def_10 (+ .def_9 .def_8 .def_7 .def_6))) (let ((.def_11 (<= .def_10 (/ 999033713778869 4503599627370496)))) (let ((.def_12 (* (/ 418176730677037 562949953421312) r3))) (let ((.def_13 (* (/ 637515281718477 9007199254740992) r2))) (let ((.def_14 (* (/ 558318841944397 562949953421312) r1))) (let ((.def_15 (* (- (/ 3615020147931649 4503599627370496)) r0))) (let ((.def_16 (+ .def_15 .def_14 .def_13 .def_12))) (let ((.def_17 (<= .def_16 (/ 3113932610555 17592186044416)))) (let ((.def_18 (or .def_17 .def_11 .def_5))) (let ((.def_19 (* (/ 865442965485851 562949953421312) r3))) (let ((.def_20 (* (/ 1304677377706641 1125899906842624) r2))) (let ((.def_21 (* (- (/ 1813290055627627 9007199254740992)) r1))) (let ((.def_22 (* (- (/ 5765793871272485 4503599627370496)) r0))) (let ((.def_23 (+ .def_22 .def_21 .def_20 .def_19))) (let ((.def_24 (<= .def_23 (/ 3628030274946167 4503599627370496)))) (let ((.def_25 (* (/ 6978514286092997 2251799813685248) r3))) (let ((.def_26 (* (/ 5848930811060089 2251799813685248) r2))) (let ((.def_27 (* (- (/ 8811907617440149 4503599627370496)) r1))) (let ((.def_28 (* (- (/ 1757658561664621 562949953421312)) r0))) (let ((.def_29 (+ .def_28 .def_27 .def_26 .def_25))) (let ((.def_30 (<= .def_29 (- (/ 1772160915132545 2251799813685248))))) (let ((.def_31 (* (- (/ 7440313535581995 4503599627370496)) r3))) (let ((.def_32 (* (- (/ 178321973391459 562949953421312)) r2))) (let ((.def_33 (* (/ 3171325891557651 1125899906842624) r1))) (let ((.def_34 (* (- (/ 4021585315955821 9007199254740992)) r0))) (let ((.def_35 (+ .def_34 .def_33 .def_32 .def_31))) (let ((.def_36 (<= .def_35 (- (/ 5098096425512053 9007199254740992))))) (let ((.def_37 (or .def_36 .def_30 .def_24))) (let ((.def_38 (* (/ 8185406183154721 9007199254740992) r3))) (let ((.def_39 (* (/ 2269159143721967 4503599627370496) r2))) (let ((.def_40 (* (/ 4529685578587285 4503599627370496) r1))) (let ((.def_41 (* (- (/ 4037194350281911 4503599627370496)) r0))) (let ((.def_42 (+ .def_41 .def_40 .def_39 .def_38))) (let ((.def_43 (<= .def_42 (/ 329029561605029 281474976710656)))) (let ((.def_44 (* (/ 772153857902767 4503599627370496) r3))) (let ((.def_45 (* (/ 1087742749200513 2251799813685248) r2))) (let ((.def_46 (* (- (/ 953650013081923 562949953421312)) r1))) (let ((.def_47 (* (- (/ 1971903096115505 4503599627370496)) r0))) (let ((.def_48 (+ .def_47 .def_46 .def_45 .def_44))) (let ((.def_49 (<= .def_48 (- (/ 2484938809231797 2251799813685248))))) (let ((.def_50 (* (- (/ 7000190745403097 9007199254740992)) r3))) (let ((.def_51 (* (/ 364257229895203 281474976710656) r2))) (let ((.def_52 (* (/ 616980683696345 281474976710656) r1))) (let ((.def_53 (* (- (/ 6073180313193203 9007199254740992)) r0))) (let ((.def_54 (+ .def_53 .def_52 .def_51 .def_50))) (let ((.def_55 (<= .def_54 (/ 4080578848739081 9007199254740992)))) (let ((.def_56 (or .def_55 .def_49 .def_43))) (let ((.def_57 (* (- (/ 5269213046304571 9007199254740992)) r3))) (let ((.def_58 (* (/ 2121149430086909 2251799813685248) r2))) (let ((.def_59 (* (/ 1837080225769331 4503599627370496) r1))) (let ((.def_60 (* (/ 2959603592368293 4503599627370496) r0))) (let ((.def_61 (+ .def_60 .def_59 .def_58 .def_57))) (let ((.def_62 (<= .def_61 (/ 1910793254390163 2251799813685248)))) (let ((.def_63 (* (/ 1100773005215619 2251799813685248) r3))) (let ((.def_64 (* (- (/ 8446878210481513 9007199254740992)) r2))) (let ((.def_65 (* (/ 1195004721316373 562949953421312) r1))) (let ((.def_66 (* (/ 6988564036900953 9007199254740992) r0))) (let ((.def_67 (+ .def_66 .def_65 .def_64 .def_63))) (let ((.def_68 (<= .def_67 (/ 8733140060008771 9007199254740992)))) (let ((.def_69 (* (/ 2553728594615163 2251799813685248) r3))) (let ((.def_70 (* (- (/ 208293266978291 2251799813685248)) r2))) (let ((.def_71 (* (- (/ 4393142977597689 1125899906842624)) r1))) (let ((.def_72 (* (/ 1194301367054213 4503599627370496) r0))) (let ((.def_73 (+ .def_72 .def_71 .def_70 .def_69))) (let ((.def_74 (<= .def_73 (- (/ 5083842432953653 2251799813685248))))) (let ((.def_75 (or .def_74 .def_68 .def_62))) (let ((.def_76 (* (/ 7835690107339877 9007199254740992) r3))) (let ((.def_77 (* (/ 74804609925061 562949953421312) r2))) (let ((.def_78 (* (- (/ 1256317311875721 1125899906842624)) r1))) (let ((.def_79 (* (- (/ 3489256805093023 2251799813685248)) r0))) (let ((.def_80 (+ .def_79 .def_78 .def_77 .def_76))) (let ((.def_81 (<= .def_80 (- (/ 2413928136218753 4503599627370496))))) (let ((.def_82 (* (- (/ 3474561230053495 1125899906842624)) r3))) (let ((.def_83 (* (/ 710247585838879 1125899906842624) r2))) (let ((.def_84 (* (- (/ 2438187444248413 4503599627370496)) r1))) (let ((.def_85 (* (/ 3424900743460281 9007199254740992) r0))) (let ((.def_86 (+ .def_85 .def_84 .def_83 .def_82))) (let ((.def_87 (<= .def_86 (- (/ 1648015265755589 1125899906842624))))) (let ((.def_88 (* (- (/ 7733923514146099 9007199254740992)) r3))) (let ((.def_89 (* (- (/ 881367307876679 281474976710656)) r2))) (let ((.def_90 (* (- (/ 2541931523672827 4503599627370496)) r1))) (let ((.def_91 (* (- (/ 4904287760668879 9007199254740992)) r0))) (let ((.def_92 (+ .def_91 .def_90 .def_89 .def_88))) (let ((.def_93 (<= .def_92 (- (/ 3603129663157789 1125899906842624))))) (let ((.def_94 (or .def_93 .def_87 .def_81))) (let ((.def_95 (and .def_94 .def_75 .def_56 .def_37 .def_18))) .def_95)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
