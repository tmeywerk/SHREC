(set-logic QF_LRA)
(declare-fun r0 () Real)
(declare-fun r1 () Real)
(declare-fun r2 () Real)
(declare-fun b0 () Bool)
(declare-fun b3 () Bool)
(declare-fun r3 () Real)
(assert (let ((.def_0 (* (- (/ 3152883903950751 2251799813685248)) r3))) (let ((.def_1 (* (/ 4895010026116485 9007199254740992) r2))) (let ((.def_2 (* (- (/ 3039909251150433 2251799813685248)) r1))) (let ((.def_3 (* (/ 5404178463607071 4503599627370496) r0))) (let ((.def_4 (+ .def_3 .def_2 .def_1 .def_0))) (let ((.def_5 (<= .def_4 (- (/ 572068189150153 562949953421312))))) (let ((.def_6 (* (- (/ 1027773814460803 9007199254740992)) r3))) (let ((.def_7 (* (/ 139129624155335 562949953421312) r2))) (let ((.def_8 (* (/ 236931970475279 281474976710656) r1))) (let ((.def_9 (* (/ 1300745361451505 4503599627370496) r0))) (let ((.def_10 (+ .def_9 .def_8 .def_7 .def_6))) (let ((.def_11 (<= .def_10 (/ 668922863026583 2251799813685248)))) (let ((.def_12 (or b3 .def_11 .def_5))) (let ((.def_13 (* (/ 2394798674350435 4503599627370496) r3))) (let ((.def_14 (* (/ 949437926679209 4503599627370496) r2))) (let ((.def_15 (* (/ 4170534154972223 2251799813685248) r1))) (let ((.def_16 (* (- (/ 2578058626235223 9007199254740992)) r0))) (let ((.def_17 (+ .def_16 .def_15 .def_14 .def_13))) (let ((.def_18 (<= .def_17 (/ 8422472056403519 9007199254740992)))) (let ((.def_19 (* (/ 4069535295740171 2251799813685248) r3))) (let ((.def_20 (* (/ 2731714819472751 2251799813685248) r2))) (let ((.def_21 (* (/ 7317248098842557 9007199254740992) r1))) (let ((.def_22 (* (/ 6772994915404425 9007199254740992) r0))) (let ((.def_23 (+ .def_22 .def_21 .def_20 .def_19))) (let ((.def_24 (<= .def_23 (/ 2003605268902939 1125899906842624)))) (let ((.def_25 (not b0))) (let ((.def_26 (or .def_25 .def_24 .def_18))) (let ((.def_27 (and .def_26 .def_12))) .def_27)))))))))))))))))))))))))))))
(check-sat)
