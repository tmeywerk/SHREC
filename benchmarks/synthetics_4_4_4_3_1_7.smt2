(set-logic QF_LRA)
(declare-fun r3 () Real)
(declare-fun b2 () Bool)
(declare-fun r0 () Real)
(declare-fun b1 () Bool)
(declare-fun b0 () Bool)
(declare-fun r1 () Real)
(declare-fun r2 () Real)
(assert (let ((.def_0 (* (- (/ 7155354366581339 9007199254740992)) r3))) (let ((.def_1 (* (- (/ 1870065358560825 4503599627370496)) r2))) (let ((.def_2 (* (- (/ 2308498182644011 9007199254740992)) r1))) (let ((.def_3 (* (/ 3567425111911033 1125899906842624) r0))) (let ((.def_4 (+ .def_3 .def_2 .def_1 .def_0))) (let ((.def_5 (<= .def_4 (- (/ 5826277910454565 9007199254740992))))) (let ((.def_6 (or b0 b2 .def_5))) (let ((.def_7 (* (- (/ 1103889301881921 9007199254740992)) r3))) (let ((.def_8 (* (- (/ 1396228098337369 2251799813685248)) r2))) (let ((.def_9 (* (- (/ 287339239247627 140737488355328)) r1))) (let ((.def_10 (* (/ 58369262067145 9007199254740992) r0))) (let ((.def_11 (+ .def_10 .def_9 .def_8 .def_7))) (let ((.def_12 (<= .def_11 (- (/ 414967373497525 281474976710656))))) (let ((.def_13 (or b1 b0 .def_12))) (let ((.def_14 (* (/ 3326688130318005 4503599627370496) r3))) (let ((.def_15 (* (- (/ 1996172213232239 4503599627370496)) r2))) (let ((.def_16 (* (- (/ 160968518503465 1125899906842624)) r1))) (let ((.def_17 (* (/ 4674860588599169 2251799813685248) r0))) (let ((.def_18 (+ .def_17 .def_16 .def_15 .def_14))) (let ((.def_19 (<= .def_18 (/ 2542862445565697 2251799813685248)))) (let ((.def_20 (not b0))) (let ((.def_21 (or b2 .def_20 .def_19))) (let ((.def_22 (* (- (/ 2114734398981407 2251799813685248)) r3))) (let ((.def_23 (* (/ 1143372029599537 1125899906842624) r2))) (let ((.def_24 (* (- (/ 5931501859489111 9007199254740992)) r1))) (let ((.def_25 (* (/ 8786061292925073 4503599627370496) r0))) (let ((.def_26 (+ .def_25 .def_24 .def_23 .def_22))) (let ((.def_27 (<= .def_26 (/ 6712010119664485 9007199254740992)))) (let ((.def_28 (not b1))) (let ((.def_29 (or .def_28 b0 .def_27))) (let ((.def_30 (and .def_29 .def_21 .def_13 .def_6))) .def_30))))))))))))))))))))))))))))))))
(check-sat)
